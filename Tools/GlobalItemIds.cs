using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SpecialStuffPack
{
    public static partial class CodeShortcuts
    {
        public static readonly int MagicLampId = 0;
        public static readonly int WinchesterId = 1;
        public static readonly int ThompsonId = 2;
        public static readonly int ScreecherId = 3;
        public static readonly int StickyCrossbowId = 4;
        public static readonly int AwpId = 5;
        public static readonly int ZorgunId = 6;
        public static readonly int BarrelId = 7;
        public static readonly int BowId = 8;
        public static readonly int DuelingPistolId = 9;
        public static readonly int MegaDouserId = 10;
        public static readonly int CrossbowId = 12;
        public static readonly int ThunderclapId = 13;
        public static readonly int BeeHiveId = 14;
        public static readonly int Ak47Id = 15;
        public static readonly int YariLauncherId = 16;
        public static readonly int HeckBlasterId = 17;
        public static readonly int BlooperId = 18;
        public static readonly int GrenadeLauncherId = 19;
        public static readonly int MoonscraperId = 20;
        public static readonly int BsgId = 21;
        public static readonly int ShadesRevolverId = 22;
        public static readonly int DungeonEagleId = 23;
        public static readonly int DartGunId = 24;
        public static readonly int M1Id = 25;
        public static readonly int NailGunId = 26;
        public static readonly int LightGunId = 27;
        public static readonly int MailboxId = 28;
        public static readonly int Vertebraek47Id = 29;
        public static readonly int M1911Id = 30;
        public static readonly int KlobbeId = 31;
        public static readonly int VoidMarshalId = 32;
        public static readonly int TearJerkerId = 33;
        public static readonly int SmileysRevolverId = 35;
        public static readonly int MegahandId = 36;
        public static readonly int SeriousCannonId = 37;
        public static readonly int MagnumId = 38;
        public static readonly int RpgId = 39;
        public static readonly int FreezeRayId = 40;
        public static readonly int HeroineId = 41;
        public static readonly int TrankGunId = 42;
        public static readonly int MachinePistolId = 43;
        public static readonly int SkullSpitterId = 45;
        public static readonly int JolterId = 47;
        public static readonly int SniperRifleId = 49;
        public static readonly int SaaId = 50;
        public static readonly int RegularShotgunId = 51;
        public static readonly int CrescentCrossbowId = 52;
        public static readonly int AuGunId = 53;
        public static readonly int LaserRifleId = 54;
        public static readonly int VoidShotgunId = 55;
        public static readonly int ThirtyEightSpecialId = 56;
        public static readonly int AlienSidearmId = 57;
        public static readonly int VoidCoreAssaultRifleId = 58;
        public static readonly int HegemonyRifleId = 59;
        public static readonly int DemonHeadId = 60;
        public static readonly int BundleOfWandsId = 61;
        public static readonly int Colt1851Id = 62;
        public static readonly int MedkitId = 63;
        public static readonly int PotionOfLeadSkinId = 64;
        public static readonly int KnifeShieldId = 65;
        public static readonly int ProximityMineId = 66;
        public static readonly int KeyId = 67;
        public static readonly int CasingId = 68;
        public static readonly int BulletTimeId = 69;
        public static readonly int SilverCasingId = 70;
        public static readonly int DecoyId = 71;
        public static readonly int BubbleShieldId = 72;
        public static readonly int HalfHeartId = 73;
        public static readonly int GoldCasingId = 74;
        public static readonly int EyeJewelId = 76;
        public static readonly int SupplyDropId = 77;
        public static readonly int AmmoId = 78;
        public static readonly int MakarovId = 79;
        public static readonly int BudgetRevolverId = 80;
        public static readonly int Deck4rdId = 81;
        public static readonly int ElephantGunId = 82;
        public static readonly int UnfinishedGunId = 83;
        public static readonly int VulcanCannonId = 84;
        public static readonly int HeartId = 85;
        public static readonly int MarineSidearmId = 86;
        public static readonly int GammaRayId = 87;
        public static readonly int RobotsRightHandId = 88;
        public static readonly int RogueSpecialId = 89;
        public static readonly int EyeOfTheBeholsterId = 90;
        public static readonly int H4mmerId = 91;
        public static readonly int StingerId = 92;
        public static readonly int OldGoldieId = 93;
        public static readonly int Mac10Id = 94;
        public static readonly int Akey47Id = 95;
        public static readonly int M16Id = 96;
        public static readonly int PolarisId = 97;
        public static readonly int PatriotId = 98;
        public static readonly int RustySidearmId = 99;
        public static readonly int UnicornHornId = 100;
        public static readonly int ScopeId = 102;
        public static readonly int RationId = 104;
        public static readonly int FortunesFavorId = 105;
        public static readonly int JetpackId = 106;
        public static readonly int RaidenCoilId = 107;
        public static readonly int BombId = 108;
        public static readonly int IceBombId = 109;
        public static readonly int MagicSweetId = 110;
        public static readonly int HeavyBulletsId = 111;
        public static readonly int CartographersRingId = 112;
        public static readonly int RocketPoweredBulletsId = 113;
        public static readonly int BionicLegId = 114;
        public static readonly int BallotId = 115;
        public static readonly int AmmoSynthesizerId = 116;
        public static readonly int EyepatchId = 118;
        public static readonly int MetronomeId = 119;
        public static readonly int ArmorId = 120;
        public static readonly int DisintegratorId = 121;
        public static readonly int BlunderbussId = 122;
        public static readonly int PulseCannonId = 123;
        public static readonly int CactusId = 124;
        public static readonly int FlameHandId = 125;
        public static readonly int ShotbowId = 126;
        public static readonly int JunkId = 127;
        public static readonly int RubeAdyneMk2Id = 128;
        public static readonly int Com4nd0Id = 129;
        public static readonly int GlacierId = 130;
        public static readonly int UtilityBeltId = 131;
        public static readonly int RingOfMiserlyProtectionId = 132;
        public static readonly int BackpackId = 133;
        public static readonly int AmmoBeltId = 134;
        public static readonly int CogOfBattleId = 135;
        public static readonly int C4Id = 136;
        public static readonly int MapId = 137;
        public static readonly int HoneycombId = 138;
        public static readonly int MasterOfUnlockingId = 140;
        public static readonly int RubeAdynePrototypeId = 142;
        public static readonly int ShotgunFullOfHateId = 143;
        public static readonly int WitchPistolId = 145;
        public static readonly int DragunfireId = 146;
        public static readonly int PlaceableKeyId = 147;
        public static readonly int LiesId = 148;
        public static readonly int FaceMelterId = 149;
        public static readonly int TShirtCannonId = 150;
        public static readonly int TheMembraneId = 151;
        public static readonly int TheKilnId = 152;
        public static readonly int ShockRifleId = 153;
        public static readonly int TrashcannonId = 154;
        public static readonly int SingularityId = 155;
        public static readonly int LaserLotusId = 156;
        public static readonly int BigIronId = 157;
        public static readonly int AmuletOfThePitLordId = 158;
        public static readonly int GundromedaStrainId = 159;
        public static readonly int GunknightHelmetId = 160;
        public static readonly int GunknightGreavesId = 161;
        public static readonly int GunknightGauntletId = 162;
        public static readonly int GunknightArmorId = 163;
        public static readonly int HeartSynthesizerId = 164;
        public static readonly int OiledCylinderId = 165;
        public static readonly int ShelletonKeyId = 166;
        public static readonly int BloodyEyeId = 167;
        public static readonly int DoubleVisionId = 168;
        public static readonly int BlackHoleGunId = 169;
        public static readonly int IceCubeId = 170;
        public static readonly int GhostBulletsId = 172;
        public static readonly int PileOfSoulsId = 173;
        public static readonly int PotionOfGunFriendshipId = 174;
        public static readonly int TanglerId = 175;
        public static readonly int GungeonAntId = 176;
        public static readonly int AlienEngineId = 177;
        public static readonly int CrestfallerId = 178;
        public static readonly int ProtonBackpackId = 179;
        public static readonly int GrasschopperId = 180;
        public static readonly int WinchesterRifleId = 181;
        public static readonly int GreyMauserId = 182;
        public static readonly int SerManuelsRevolverId = 183;
        public static readonly int TheJudgeId = 184;
        public static readonly int MachineFistId = 186;
        public static readonly int DisarmingPersonalityId = 187;
        public static readonly int RollingEyeId = 190;
        public static readonly int RingOfFireResistanceId = 191;
        public static readonly int BugBootsId = 193;
        public static readonly int FossilizedGunId = 196;
        public static readonly int PeaShooterId = 197;
        public static readonly int GunslingersAshesId = 198;
        public static readonly int LuxinCannonId = 199;
        public static readonly int CharmedBowId = 200;
        public static readonly int PortableTurretId = 201;
        public static readonly int SawedOffId = 202;
        public static readonly int CigarettesId = 203;
        public static readonly int IrradiatedLeadId = 204;
        public static readonly int PoisonVialId = 205;
        public static readonly int CharmHornId = 206;
        public static readonly int PlaguePistolId = 207;
        public static readonly int PlungerId = 208;
        public static readonly int SenseOfDirectionId = 209;
        public static readonly int GunbowId = 210;
        public static readonly int BallisticBootsId = 212;
        public static readonly int LichyTriggerFingerId = 213;
        public static readonly int CoinCrownId = 214;
        public static readonly int BoxId = 216;
        public static readonly int OldKnightsShieldId = 219;
        public static readonly int TutorialAk47Id = 221;
        public static readonly int OldKnightsHelmId = 222;
        public static readonly int Cold45Id = 223;
        public static readonly int BlankId = 224;
        public static readonly int IceBreakerId = 225;
        public static readonly int WristbowId = 227;
        public static readonly int ParticulatorId = 228;
        public static readonly int HegemonyCarbineId = 229;
        public static readonly int HelixId = 230;
        public static readonly int GildedHydraId = 231;
        public static readonly int SpaceFriendId = 232;
        public static readonly int IbombCompanionAppId = 234;
        public static readonly int AgedBellId = 237;
        public static readonly int DuctTapeId = 239;
        public static readonly int CrutchId = 240;
        public static readonly int ScattershotId = 241;
        public static readonly int NapalmStrikeId = 242;
        public static readonly int InfuriatingNote1Id = 243;
        public static readonly int InfuriatingNote2Id = 244;
        public static readonly int InfuriatingNote3Id = 245;
        public static readonly int InfuriatingNote4Id = 246;
        public static readonly int InfuriatingNote5Id = 247;
        public static readonly int InfuriatingNote6Id = 248;
        public static readonly int OwlId = 249;
        public static readonly int GrapplingHookId = 250;
        public static readonly int PrizePistolId = 251;
        public static readonly int AirStrikeId = 252;
        public static readonly int GungeonPepperId = 253;
        public static readonly int RingOfChestFriendshipId = 254;
        public static readonly int AncientHerosBandanaId = 255;
        public static readonly int HeavyBootsId = 256;
        public static readonly int BroccoliId = 258;
        public static readonly int AntibodyId = 259;
        public static readonly int PinkGuonStoneId = 260;
        public static readonly int WhiteGuonStoneId = 262;
        public static readonly int OrangeGuonStoneId = 263;
        public static readonly int ClearGuonStoneId = 264;
        public static readonly int OldKnightsFlaskId = 267;
        public static readonly int RedGuonStoneId = 269;
        public static readonly int BlueGuonStoneId = 270;
        public static readonly int RiddleOfLeadId = 271;
        public static readonly int IronCoinId = 272;
        public static readonly int LaserSightId = 273;
        public static readonly int DarkMarkerId = 274;
        public static readonly int FlareGunId = 275;
        public static readonly int SpiceId = 276;
        public static readonly int FatBulletsId = 277;
        public static readonly int FrostBulletsId = 278;
        public static readonly int SuperHotWatchId = 279;
        public static readonly int DrumClipId = 280;
        public static readonly int GungeonBlueprintId = 281;
        public static readonly int HomingBulletsId = 284;
        public static readonly int BloodBroochId = 285;
        public static readonly int Plus1BulletsId = 286;
        public static readonly int BackupGunId = 287;
        public static readonly int BouncyBulletsId = 288;
        public static readonly int SevenLeafCloverId = 289;
        public static readonly int SunglassesId = 290;
        public static readonly int MeatbunId = 291;
        public static readonly int MolotovLauncherId = 292;
        public static readonly int MimicToothNecklaceId = 293;
        public static readonly int RingOfMimicFriendshipId = 294;
        public static readonly int HotLeadId = 295;
        public static readonly int MetashopBreachItemOldId = 296;
        public static readonly int HegemonyCreditId = 297;
        public static readonly int ShockRoundsId = 298;
        public static readonly int SuperSpaceTurtlesGunId = 299;
        public static readonly int DogId = 300;
        public static readonly int SuperSpaceTurtleId = 301;
        public static readonly int BulletThatCanKillThePastId = 303;
        public static readonly int ExplosiveRoundsId = 304;
        public static readonly int OldCrestId = 305;
        public static readonly int EscapeRopeId = 306;
        public static readonly int WaxWingsId = 307;
        public static readonly int ClusterMineId = 308;
        public static readonly int CloranthyRingId = 309;
        public static readonly int FairyWingsId = 310;
        public static readonly int CloneId = 311;
        public static readonly int BlastHelmetId = 312;
        public static readonly int MonsterBloodId = 313;
        public static readonly int NanomachinesId = 314;
        public static readonly int GunbootsId = 315;
        public static readonly int GnawedKeyId = 316;
        public static readonly int R2g2Id = 318;
        public static readonly int TicketId = 320;
        public static readonly int GoldAmmoletId = 321;
        public static readonly int LodestoneAmmoletId = 322;
        public static readonly int AngryBulletsId = 323;
        public static readonly int ChaosAmmoletId = 325;
        public static readonly int Number2Id = 326;
        public static readonly int CorsairId = 327;
        public static readonly int ChargeShotId = 328;
        public static readonly int ZillaShotgunId = 329;
        public static readonly int TheEmperorId = 330;
        public static readonly int ScienceCannonId = 331;
        public static readonly int LilBomberId = 332;
        public static readonly int MutationId = 333;
        public static readonly int WindUpGunId = 334;
        public static readonly int SilencerId = 335;
        public static readonly int PitchforkId = 336;
        public static readonly int CompositeGunId = 337;
        public static readonly int GuntherId = 338;
        public static readonly int MahogunyId = 339;
        public static readonly int LowerCaseRId = 340;
        public static readonly int BuzzkillId = 341;
        public static readonly int UraniumAmmoletId = 342;
        public static readonly int CopperAmmoletId = 343;
        public static readonly int FrostAmmoletId = 344;
        public static readonly int FightsabreId = 345;
        public static readonly int HuntsmanId = 346;
        public static readonly int ShotgrubId = 347;
        public static readonly int PrimePrimerId = 348;
        public static readonly int PlanarLeadId = 349;
        public static readonly int ObsidianShellCasingId = 350;
        public static readonly int ArcaneGunpowderId = 351;
        public static readonly int ShadowBulletsId = 352;
        public static readonly int EnragingPhotoId = 353;
        public static readonly int MilitaryTrainingId = 354;
        public static readonly int ChromesteelAssaultRifleId = 355;
        public static readonly int TrustyLockpicksId = 356;
        public static readonly int CatClawId = 357;
        public static readonly int RailgunId = 358;
        public static readonly int CompressedAirTankId = 359;
        public static readonly int SnakemakerId = 360;
        public static readonly int BulletBoreId = 362;
        public static readonly int TrickGunId = 363;
        public static readonly int HeartOfIceId = 364;
        public static readonly int MassShotgunId = 365;
        public static readonly int MolotovId = 366;
        public static readonly int HuntersJournalId = 367;
        public static readonly int ElTigreId = 368;
        public static readonly int BaitLauncherId = 369;
        public static readonly int PrototypeRailgunId = 370;
        public static readonly int RcRocketId = 372;
        public static readonly int AlphaBulletsId = 373;
        public static readonly int OmegaBulletsId = 374;
        public static readonly int EasyReloadBulletsId = 375;
        public static readonly int BrickBreakerId = 376;
        public static readonly int ExcaliberId = 377;
        public static readonly int DerringerId = 378;
        public static readonly int ShotgunFullOfLoveId = 379;
        public static readonly int BetrayersShieldId = 380;
        public static readonly int TripleCrossbowId = 381;
        public static readonly int SlingId = 382;
        public static readonly int FlashRayId = 383;
        public static readonly int PhoenixId = 384;
        public static readonly int HexagunId = 385;
        public static readonly int FrostGiantId = 387;
        public static readonly int CobaltHammerId = 390;
        public static readonly int CellKeyId = 392;
        public static readonly int AnvillainId = 393;
        public static readonly int MineCutterId = 394;
        public static readonly int StaffOfFirepowerId = 395;
        public static readonly int TableTechSightId = 396;
        public static readonly int TableTechMoneyId = 397;
        public static readonly int TableTechRocketId = 398;
        public static readonly int TableTechRageId = 399;
        public static readonly int TableTechBlanksId = 400;
        public static readonly int GungineId = 401;
        public static readonly int SnowballerId = 402;
        public static readonly int MeltedRockId = 403;
        public static readonly int SirenId = 404;
        public static readonly int RattlerId = 406;
        public static readonly int SixthChamberId = 407;
        public static readonly int BustedTelevisionId = 409;
        public static readonly int BatteryBulletsId = 410;
        public static readonly int CoolantLeakId = 411;
        public static readonly int FriendshipCookieId = 412;
        public static readonly int HerosSwordId = 413;
        public static readonly int LiveAmmoId = 414;
        public static readonly int ReplacementArmId = 415;
        public static readonly int BalloonId = 416;
        public static readonly int BlasphemyId = 417;
        public static readonly int TrorcBreachItemId = 418;
        public static readonly int HeartHolsterId = 421;
        public static readonly int HeartLunchboxId = 422;
        public static readonly int HeartLocketId = 423;
        public static readonly int HeartBottleId = 424;
        public static readonly int HeartPurseId = 425;
        public static readonly int ShotgaColaId = 426;
        public static readonly int ShotgunCoffeeId = 427;
        public static readonly int GooptonBreachItemId = 429;
        public static readonly int LiquidValkyrieId = 431;
        public static readonly int JarOfBeesId = 432;
        public static readonly int StuffedStarId = 433;
        public static readonly int BulletIdolId = 434;
        public static readonly int MustacheId = 435;
        public static readonly int BloodiedScarfId = 436;
        public static readonly int MuscleRelaxantId = 437;
        public static readonly int ExplosiveDecoyId = 438;
        public static readonly int BracketKeyId = 439;
        public static readonly int RubyBraceletId = 440;
        public static readonly int EmeraldBraceletId = 441;
        public static readonly int BadgeId = 442;
        public static readonly int BigBoyId = 443;
        public static readonly int TridentId = 444;
        public static readonly int TheScramblerId = 445;
        public static readonly int ShieldOfTheMaidenId = 447;
        public static readonly int BoomerangId = 448;
        public static readonly int TeleporterPrototypeId = 449;
        public static readonly int ArmorSynthesizerId = 450;
        public static readonly int PigId = 451;
        public static readonly int SpongeId = 452;
        public static readonly int GasMaskId = 453;
        public static readonly int HazmatSuitId = 454;
        public static readonly int RingOfTriggersId = 456;
        public static readonly int ArmorOfThornsId = 457;
        public static readonly int RingOfEtherealFormId = 458;
        public static readonly int ChaffGrenadeId = 460;
        public static readonly int BlankCompanionsRingId = 461;
        public static readonly int SmokeBombId = 462;
        public static readonly int RingOfTheResourcefulRatId = 463;
        public static readonly int ShellegunId = 464;
        public static readonly int TableTechStunId = 465;
        public static readonly int GreenGuonStoneId = 466;
        public static readonly int MasterRound5Id = 467;
        public static readonly int MasterRound3Id = 468;
        public static readonly int MasterRound1Id = 469;
        public static readonly int MasterRound4Id = 470;
        public static readonly int MasterRound2Id = 471;
        public static readonly int GummyGunId = 472;
        public static readonly int HiddenCompartmentId = 473;
        public static readonly int AbyssalTentacleId = 474;
        public static readonly int QuadLaserId = 475;
        public static readonly int MicrotransactionGunId = 476;
        public static readonly int OriguniId = 477;
        public static readonly int BananaId = 478;
        public static readonly int SuperMeatGunId = 479;
        public static readonly int MakeshiftCannonId = 480;
        public static readonly int CameraId = 481;
        public static readonly int GunzhengId = 482;
        public static readonly int TetrominatorId = 483;
        public static readonly int DevolverId = 484;
        public static readonly int OrangeId = 485;
        public static readonly int TreadnaughtCannonId = 486;
        public static readonly int BookOfChestAnatomyId = 487;
        public static readonly int RingOfChestVampirismId = 488;
        public static readonly int GunSoulId = 489;
        public static readonly int BrickOfCashId = 490;
        public static readonly int WingmanId = 491;
        public static readonly int WolfId = 492;
        public static readonly int BriefcaseOfCashId = 493;
        public static readonly int GalacticMedalOfValorId = 494;
        public static readonly int UnityId = 495;
        public static readonly int MetashopBreachItemGunId = 497;
        public static readonly int ElderBlankId = 499;
        public static readonly int HipHolsterId = 500;
        public static readonly int MetashopBreachItemItemId = 501;
        public static readonly int PilotsPastRocketsId = 502;
        public static readonly int BulletId = 503;
        public static readonly int HyperLightBlasterId = 504;
        public static readonly int WickedSisterSynergyId = 505;
        public static readonly int ReallySpecialLuteId = 506;
        public static readonly int StarpewId = 507;
        public static readonly int DuelingLaserId = 508;
        public static readonly int Jk47Id = 510;
        public static readonly int ThirdPartyControllerId = 511;
        public static readonly int ShellId = 512;
        public static readonly int PoxcannonId = 513;
        public static readonly int DirectionalPadId = 514;
        public static readonly int MourningStarId = 515;
        public static readonly int TripleGunId = 516;
        public static readonly int TripleGunForm2Id = 517;
        public static readonly int TripleGunForm3Id = 518;
        public static readonly int CombinedRifleId = 519;
        public static readonly int BalloonGunId = 520;
        public static readonly int ChanceBulletsId = 521;
        public static readonly int StoutBulletsId = 523;
        public static readonly int Bloody9MmId = 524;
        public static readonly int LamentConfigurumId = 525;
        public static readonly int SpringheelBootsId = 526;
        public static readonly int CharmingRoundsId = 527;
        public static readonly int ZombieBulletsId = 528;
        public static readonly int BattleStandardId = 529;
        public static readonly int RemoteBulletsId = 530;
        public static readonly int FlakBulletsId = 531;
        public static readonly int GildedBulletsId = 532;
        public static readonly int MagicBulletsId = 533;
        public static readonly int RealCoolBowId = 535;
        public static readonly int RelodestoneId = 536;
        public static readonly int VorpalGunId = 537;
        public static readonly int SilverBulletsId = 538;
        public static readonly int BoxingGloveId = 539;
        public static readonly int GlassCannonId = 540;
        public static readonly int CaseyId = 541;
        public static readonly int StrafeGunId = 542;
        public static readonly int ThePredatorId = 543;
        public static readonly int Ac15UnarmoredId = 544;
        public static readonly int Ac15Id = 545;
        public static readonly int WindgunnerId = 546;
        public static readonly int KnightsGunId = 550;
        public static readonly int CrownOfGunsId = 551;
        public static readonly int BottleId = 558;
        public static readonly int TheFatLineId = 562;
        public static readonly int TheExoticId = 563;
        public static readonly int FullMetalJacketId = 564;
        public static readonly int GlassGuonStoneId = 565;
        public static readonly int RadGunId = 566;
        public static readonly int RollBombId = 567;
        public static readonly int HelixBulletsId = 568;
        public static readonly int ChaosBulletsId = 569;
        public static readonly int YellowChamberId = 570;
        public static readonly int CursedBulletsId = 571;
        public static readonly int ChickenFluteId = 572;
        public static readonly int ChestTeleporterId = 573;
        public static readonly int WoodenBlasphemyId = 574;
        public static readonly int DougBreachItemId = 575;
        public static readonly int RobotsLeftHandId = 576;
        public static readonly int TurboGunId = 577;
        public static readonly int SprunId = 578;
        public static readonly int BlankBulletsId = 579;
        public static readonly int JunkanId = 580;
        public static readonly int VoidCoreCannonId = 593;
        public static readonly int AlasSniperionSynergyId = 594;
        public static readonly int LifeOrbId = 595;
        public static readonly int TeapotId = 596;
        public static readonly int MrAccretionJrId = 597;
        public static readonly int StoneDomeId = 598;
        public static readonly int BubbleBlasterId = 599;
        public static readonly int SpreadAmmoId = 600;
        public static readonly int BigShotgunId = 601;
        public static readonly int GunnerId = 602;
        public static readonly int LameyGunId = 603;
        public static readonly int SlingerId = 604;
        public static readonly int LootBagId = 605;
        public static readonly int ClownMaskId = 607;
        public static readonly int NeoTechYoSynergyId = 608;
        public static readonly int RubensteinsMonsterId = 609;
        public static readonly int WoodBeamId = 610;
        public static readonly int IslandFormeSynergyId = 611;
        public static readonly int WaveBeamSynergyId = 612;
        public static readonly int IceBeamSynergyId = 613;
        public static readonly int PlasmaBeamSynergyId = 614;
        public static readonly int HyberBeamSynergyId = 615;
        public static readonly int CarefulIterationSynergyId = 616;
        public static readonly int QuickBoomerangSynergyId = 617;
        public static readonly int TimeStopperSynergyId = 618;
        public static readonly int MetalBladeSynergyId = 619;
        public static readonly int LeafShieldSynergyId = 620;
        public static readonly int AtomicFireSynergyId = 621;
        public static readonly int BubbleLeadSynergyId = 622;
        public static readonly int AirShooterSynergyId = 623;
        public static readonly int CrashBomberSynergyId = 624;
        public static readonly int DrillId = 625;
        public static readonly int ElimentalerId = 626;
        public static readonly int PlatinumBulletsId = 627;
        public static readonly int BumbulletsId = 630;
        public static readonly int HoleyGrailId = 631;
        public static readonly int TurkeyId = 632;
        public static readonly int TableTechShotgunId = 633;
        public static readonly int CrisisStoneId = 634;
        public static readonly int SnowballetsId = 636;
        public static readonly int WeirdEggId = 637;
        public static readonly int DevolverRoundsId = 638;
        public static readonly int VorpalBulletsId = 640;
        public static readonly int GoldJunkId = 641;
        public static readonly int DarumaId = 643;
        public static readonly int PortableTableDeviceId = 644;
        public static readonly int TurtleProblemId = 645;
        public static readonly int ChamberGunId = 647;
        public static readonly int FullCircleSynergyId = 648;
        public static readonly int UppercaseRId = 649;
        public static readonly int PaydayWinchesterId = 650;
        public static readonly int RogueSpecialAltId = 651;
        public static readonly int BudgetRevolverAltId = 652;
        public static readonly int GunPieceId = 654;
        public static readonly int HungryBulletsId = 655;
        public static readonly int KrullerGlaiveId = 656;
        public static readonly int ChamberGunOublietteId = 657;
        public static readonly int ChamberGunForgeId = 658;
        public static readonly int ChamberGunHollowId = 659;
        public static readonly int ChamberGunProperId = 660;
        public static readonly int OrbitalBulletsId = 661;
        public static readonly int PartiallyEatenCheeseId = 662;
        public static readonly int ResourcefulSackId = 663;
        public static readonly int BabyGoodMimicId = 664;
        public static readonly int MachoBraceId = 665;
        public static readonly int TableTechHeatId = 666;
        public static readonly int RatBootsId = 667;
        public static readonly int EnemyElimentalerId = 668;
        public static readonly int HighDragunfireId = 670;
        public static readonly int BetaRaySynergyId = 671;
        public static readonly int TheElephantInTheRoomSynergyId = 672;
        public static readonly int PistolMachineSynergyId = 673;
        public static readonly int PeaCannonSynergyId = 674;
        public static readonly int DualingPistolSynergyId = 675;
        public static readonly int LaserLightShowSynergyId = 676;
        public static readonly int KalibreathSynergyId = 677;
        public static readonly int BlunderbraceSynergyId = 678;
        public static readonly int SnowballShotgunSynergyId = 679;
        public static readonly int ArmoredCorpsSynergyId = 680;
        public static readonly int DetectiveModeSynergyId = 681;
        public static readonly int PandemicPistolSynergyId = 682;
        public static readonly int AlistairsLadderSynergyId = 683;
        public static readonly int M1MultiToolSynergyId = 684;
        public static readonly int FutureGangsterSynergyId = 685;
        public static readonly int BlackFlagSynergyId = 686;
        public static readonly int FiveOclockSomewhereSynergyId = 687;
        public static readonly int FruitsAndVegetablesSynergyId = 688;
        public static readonly int KalibersGripSynergyId = 689;
        public static readonly int KlobberingTimeSynergyId = 690;
        public static readonly int SpecialReserveSynergyId = 691;
        public static readonly int NailedItSynergyId = 692;
        public static readonly int ShowAcrossTheBowSynergyId = 693;
        public static readonly int IronSlugSynergyId = 694;
        public static readonly int HardLightSynergyId = 695;
        public static readonly int ChiefMasterSynergyId = 696;
        public static readonly int BatteryPoweredSynergyId = 697;
        public static readonly int MaximizeSpellSynergyId = 698;
        public static readonly int HegemonySpecialForcesSynergyId = 699;
        public static readonly int CactusFlowerSynergyId = 700;
        public static readonly int NoxinCannonSynergyId = 701;
        public static readonly int AlternativeRockSynergyId = 702;
        public static readonly int ApiarySynergyId = 703;
        public static readonly int RecyclingBinSynergyId = 704;
        public static readonly int SaviorOfTheUniverseSynergyId = 705;
        public static readonly int FiringWithFlairSynergyId = 706;
        public static readonly int NotQuiteAsMiniSynergyId = 707;
        public static readonly int DoubleDoubleHelixSynergyId = 708;
        public static readonly int LikeShootingFishSynergyId = 709;
        public static readonly int IceCapSynergyId = 710;
        public static readonly int PeripheralVisionSynergyId = 711;
        public static readonly int RaidenSynergyId = 712;
        public static readonly int DoubleMoon7SynergyId = 713;
        public static readonly int LotusBloomSynergyId = 714;
        public static readonly int HammerAndNailSynergyId = 715;
        public static readonly int ArcticWarfareSynergyId = 716;
        public static readonly int CerebralBrosSynergyId = 717;
        public static readonly int SquareBraceSynergyId = 718;
        public static readonly int KingBomberSynergyId = 719;
        public static readonly int ElectronPackSynergyId = 720;
        public static readonly int HeavyJoltSynergyId = 721;
        public static readonly int PitchPerfectSynergyId = 722;
        public static readonly int CommammoBeltSynergyId = 723;
        public static readonly int RubyCarbineSynergyId = 724;
        public static readonly int TearJerkerUnknownSynergyId = 725;
        public static readonly int AkeyBreakySynergyId = 726;
        public static readonly int RatKeyId = 727;
        public static readonly int GunderfuryLv50Id = 728;
        public static readonly int GunderfuryLv60Id = 729;
        public static readonly int GunderfuryLv40Id = 730;
        public static readonly int GunderfuryLv30Id = 731;
        public static readonly int GunderfuryId = 732;
        public static readonly int GunderfuryLv20Id = 733;
        public static readonly int MimicGunId = 734;
        public static readonly int SerpentId = 735;
        public static readonly int PhoenixUpSynergyId = 736;
        public static readonly int BetrayersLiesSynergyId = 737;
        public static readonly int LowerCaseRUnknownSynergyId = 738;
        public static readonly int GreatQueenAntSynergyId = 739;
        public static readonly int NotSoSawedOffSynergyId = 740;
        public static readonly int WrathOfTheBlamSynergyId = 741;
        public static readonly int ContrailSynergyId = 742;
        public static readonly int KungFuHippieRappinSurferSynergyId = 743;
        public static readonly int ParchmentalSynergyId = 744;
        public static readonly int GunderlordSynergyId = 745;
        public static readonly int TurtineGunId = 747;
        public static readonly int SunlightJavelinId = 748;
        public static readonly int SecondAccidentSynergyId = 749;
        public static readonly int DontHootTheMessengerSynergyId = 750;
        public static readonly int BigGunId = 751;
        public static readonly int WestbroNomesRevolverId = 752;
        public static readonly int WestbroTucosRevolverId = 753;
        public static readonly int WestbroAngelsRevolverId = 754;
        public static readonly int EvolverId = 755;
        public static readonly int EvolverSpongeId = 756;
        public static readonly int EvolverFlatwormId = 757;
        public static readonly int EvolverSnailId = 758;
        public static readonly int EvolverFrogId = 759;
        public static readonly int EvolverDragonId = 760;
        public static readonly int HighKaliberId = 761;
        public static readonly int FinishedGunId = 762;
        public static readonly int ChamberGunHellId = 763;
        public static readonly int ChamberGunAbbeyId = 806;
        public static readonly int ChamberGunMinesId = 807;
        public static readonly int ChamberGunRatLairId = 808;
        public static readonly int MarineSidearmAltId = 809;
        public static readonly int RustySidearmAltId = 810;
        public static readonly int DartGunAltId = 811;
        public static readonly int RobotsRightHandAltId = 812;
        public static readonly int BlasphemyAltId = 813;
        public static readonly int MagazineRackId = 814;
        public static readonly int LichsEyeBulletsId = 815;
        public static readonly int INeedScissors61SynergyId = 816;
        public static readonly int CatBulletKingThroneId = 817;
        public static readonly int BabyGoodShelletonId = 818;
        public static readonly int MaxPaneSynergyId = 819;
        public static readonly int ShadowCloneId = 820;
        public static readonly int ScouterId = 821;
        public static readonly int KatanaBulletsId = 822;
        public static readonly int ChamberGunRngId = 823;
        public static Gun MagicLampObject => PickupObjectDatabase.GetById(MagicLampId).As<Gun>();
        public static Gun WinchesterObject => PickupObjectDatabase.GetById(WinchesterId).As<Gun>();
        public static Gun ThompsonObject => PickupObjectDatabase.GetById(ThompsonId).As<Gun>();
        public static Gun ScreecherObject => PickupObjectDatabase.GetById(ScreecherId).As<Gun>();
        public static Gun StickyCrossbowObject => PickupObjectDatabase.GetById(StickyCrossbowId).As<Gun>();
        public static Gun AwpObject => PickupObjectDatabase.GetById(AwpId).As<Gun>();
        public static Gun ZorgunObject => PickupObjectDatabase.GetById(ZorgunId).As<Gun>();
        public static Gun BarrelObject => PickupObjectDatabase.GetById(BarrelId).As<Gun>();
        public static Gun BowObject => PickupObjectDatabase.GetById(BowId).As<Gun>();
        public static Gun DuelingPistolObject => PickupObjectDatabase.GetById(DuelingPistolId).As<Gun>();
        public static Gun MegaDouserObject => PickupObjectDatabase.GetById(MegaDouserId).As<Gun>();
        public static Gun CrossbowObject => PickupObjectDatabase.GetById(CrossbowId).As<Gun>();
        public static Gun ThunderclapObject => PickupObjectDatabase.GetById(ThunderclapId).As<Gun>();
        public static Gun BeeHiveObject => PickupObjectDatabase.GetById(BeeHiveId).As<Gun>();
        public static Gun Ak47Object => PickupObjectDatabase.GetById(Ak47Id).As<Gun>();
        public static Gun YariLauncherObject => PickupObjectDatabase.GetById(YariLauncherId).As<Gun>();
        public static Gun HeckBlasterObject => PickupObjectDatabase.GetById(HeckBlasterId).As<Gun>();
        public static Gun BlooperObject => PickupObjectDatabase.GetById(BlooperId).As<Gun>();
        public static Gun GrenadeLauncherObject => PickupObjectDatabase.GetById(GrenadeLauncherId).As<Gun>();
        public static Gun MoonscraperObject => PickupObjectDatabase.GetById(MoonscraperId).As<Gun>();
        public static Gun BsgObject => PickupObjectDatabase.GetById(BsgId).As<Gun>();
        public static Gun ShadesRevolverObject => PickupObjectDatabase.GetById(ShadesRevolverId).As<Gun>();
        public static Gun DungeonEagleObject => PickupObjectDatabase.GetById(DungeonEagleId).As<Gun>();
        public static Gun DartGunObject => PickupObjectDatabase.GetById(DartGunId).As<Gun>();
        public static Gun M1Object => PickupObjectDatabase.GetById(M1Id).As<Gun>();
        public static Gun NailGunObject => PickupObjectDatabase.GetById(NailGunId).As<Gun>();
        public static Gun LightGunObject => PickupObjectDatabase.GetById(LightGunId).As<Gun>();
        public static Gun MailboxObject => PickupObjectDatabase.GetById(MailboxId).As<Gun>();
        public static Gun Vertebraek47Object => PickupObjectDatabase.GetById(Vertebraek47Id).As<Gun>();
        public static Gun M1911Object => PickupObjectDatabase.GetById(M1911Id).As<Gun>();
        public static Gun KlobbeObject => PickupObjectDatabase.GetById(KlobbeId).As<Gun>();
        public static Gun VoidMarshalObject => PickupObjectDatabase.GetById(VoidMarshalId).As<Gun>();
        public static Gun TearJerkerObject => PickupObjectDatabase.GetById(TearJerkerId).As<Gun>();
        public static Gun SmileysRevolverObject => PickupObjectDatabase.GetById(SmileysRevolverId).As<Gun>();
        public static Gun MegahandObject => PickupObjectDatabase.GetById(MegahandId).As<Gun>();
        public static Gun SeriousCannonObject => PickupObjectDatabase.GetById(SeriousCannonId).As<Gun>();
        public static Gun MagnumObject => PickupObjectDatabase.GetById(MagnumId).As<Gun>();
        public static Gun RpgObject => PickupObjectDatabase.GetById(RpgId).As<Gun>();
        public static Gun FreezeRayObject => PickupObjectDatabase.GetById(FreezeRayId).As<Gun>();
        public static Gun HeroineObject => PickupObjectDatabase.GetById(HeroineId).As<Gun>();
        public static Gun TrankGunObject => PickupObjectDatabase.GetById(TrankGunId).As<Gun>();
        public static Gun MachinePistolObject => PickupObjectDatabase.GetById(MachinePistolId).As<Gun>();
        public static Gun SkullSpitterObject => PickupObjectDatabase.GetById(SkullSpitterId).As<Gun>();
        public static Gun JolterObject => PickupObjectDatabase.GetById(JolterId).As<Gun>();
        public static Gun SniperRifleObject => PickupObjectDatabase.GetById(SniperRifleId).As<Gun>();
        public static Gun SaaObject => PickupObjectDatabase.GetById(SaaId).As<Gun>();
        public static Gun RegularShotgunObject => PickupObjectDatabase.GetById(RegularShotgunId).As<Gun>();
        public static Gun CrescentCrossbowObject => PickupObjectDatabase.GetById(CrescentCrossbowId).As<Gun>();
        public static Gun AuGunObject => PickupObjectDatabase.GetById(AuGunId).As<Gun>();
        public static Gun LaserRifleObject => PickupObjectDatabase.GetById(LaserRifleId).As<Gun>();
        public static Gun VoidShotgunObject => PickupObjectDatabase.GetById(VoidShotgunId).As<Gun>();
        public static Gun ThirtyEightSpecialObject => PickupObjectDatabase.GetById(ThirtyEightSpecialId).As<Gun>();
        public static Gun AlienSidearmObject => PickupObjectDatabase.GetById(AlienSidearmId).As<Gun>();
        public static Gun VoidCoreAssaultRifleObject => PickupObjectDatabase.GetById(VoidCoreAssaultRifleId).As<Gun>();
        public static Gun HegemonyRifleObject => PickupObjectDatabase.GetById(HegemonyRifleId).As<Gun>();
        public static Gun DemonHeadObject => PickupObjectDatabase.GetById(DemonHeadId).As<Gun>();
        public static Gun BundleOfWandsObject => PickupObjectDatabase.GetById(BundleOfWandsId).As<Gun>();
        public static Gun Colt1851Object => PickupObjectDatabase.GetById(Colt1851Id).As<Gun>();
        public static HealPlayerItem MedkitObject => PickupObjectDatabase.GetById(MedkitId).As<HealPlayerItem>();
        public static ReflectShieldPlayerItem PotionOfLeadSkinObject => PickupObjectDatabase.GetById(PotionOfLeadSkinId).As<ReflectShieldPlayerItem>();
        public static KnifeShieldItem KnifeShieldObject => PickupObjectDatabase.GetById(KnifeShieldId).As<KnifeShieldItem>();
        public static SpawnObjectPlayerItem ProximityMineObject => PickupObjectDatabase.GetById(ProximityMineId).As<SpawnObjectPlayerItem>();
        public static KeyBulletPickup KeyObject => PickupObjectDatabase.GetById(KeyId).As<KeyBulletPickup>();
        public static CurrencyPickup CasingObject => PickupObjectDatabase.GetById(CasingId).As<CurrencyPickup>();
        public static TimeSlowPlayerItem BulletTimeObject => PickupObjectDatabase.GetById(BulletTimeId).As<TimeSlowPlayerItem>();
        public static CurrencyPickup SilverCasingObject => PickupObjectDatabase.GetById(SilverCasingId).As<CurrencyPickup>();
        public static SpawnObjectPlayerItem DecoyObject => PickupObjectDatabase.GetById(DecoyId).As<SpawnObjectPlayerItem>();
        public static ReflectShieldPlayerItem BubbleShieldObject => PickupObjectDatabase.GetById(BubbleShieldId).As<ReflectShieldPlayerItem>();
        public static HealthPickup HalfHeartObject => PickupObjectDatabase.GetById(HalfHeartId).As<HealthPickup>();
        public static CurrencyPickup GoldCasingObject => PickupObjectDatabase.GetById(GoldCasingId).As<CurrencyPickup>();
        public static SimplePuzzleItem EyeJewelObject => PickupObjectDatabase.GetById(EyeJewelId).As<SimplePuzzleItem>();
        public static SupplyDropItem SupplyDropObject => PickupObjectDatabase.GetById(SupplyDropId).As<SupplyDropItem>();
        public static AmmoPickup AmmoObject => PickupObjectDatabase.GetById(AmmoId).As<AmmoPickup>();
        public static Gun MakarovObject => PickupObjectDatabase.GetById(MakarovId).As<Gun>();
        public static Gun BudgetRevolverObject => PickupObjectDatabase.GetById(BudgetRevolverId).As<Gun>();
        public static Gun Deck4rdObject => PickupObjectDatabase.GetById(Deck4rdId).As<Gun>();
        public static Gun ElephantGunObject => PickupObjectDatabase.GetById(ElephantGunId).As<Gun>();
        public static Gun UnfinishedGunObject => PickupObjectDatabase.GetById(UnfinishedGunId).As<Gun>();
        public static Gun VulcanCannonObject => PickupObjectDatabase.GetById(VulcanCannonId).As<Gun>();
        public static HealthPickup HeartObject => PickupObjectDatabase.GetById(HeartId).As<HealthPickup>();
        public static Gun MarineSidearmObject => PickupObjectDatabase.GetById(MarineSidearmId).As<Gun>();
        public static Gun GammaRayObject => PickupObjectDatabase.GetById(GammaRayId).As<Gun>();
        public static Gun RobotsRightHandObject => PickupObjectDatabase.GetById(RobotsRightHandId).As<Gun>();
        public static Gun RogueSpecialObject => PickupObjectDatabase.GetById(RogueSpecialId).As<Gun>();
        public static Gun EyeOfTheBeholsterObject => PickupObjectDatabase.GetById(EyeOfTheBeholsterId).As<Gun>();
        public static Gun H4mmerObject => PickupObjectDatabase.GetById(H4mmerId).As<Gun>();
        public static Gun StingerObject => PickupObjectDatabase.GetById(StingerId).As<Gun>();
        public static Gun OldGoldieObject => PickupObjectDatabase.GetById(OldGoldieId).As<Gun>();
        public static Gun Mac10Object => PickupObjectDatabase.GetById(Mac10Id).As<Gun>();
        public static Gun Akey47Object => PickupObjectDatabase.GetById(Akey47Id).As<Gun>();
        public static Gun M16Object => PickupObjectDatabase.GetById(M16Id).As<Gun>();
        public static Gun PolarisObject => PickupObjectDatabase.GetById(PolarisId).As<Gun>();
        public static Gun PatriotObject => PickupObjectDatabase.GetById(PatriotId).As<Gun>();
        public static Gun RustySidearmObject => PickupObjectDatabase.GetById(RustySidearmId).As<Gun>();
        public static Gun UnicornHornObject => PickupObjectDatabase.GetById(UnicornHornId).As<Gun>();
        public static BasicStatPickup ScopeObject => PickupObjectDatabase.GetById(ScopeId).As<BasicStatPickup>();
        public static RationItem RationObject => PickupObjectDatabase.GetById(RationId).As<RationItem>();
        public static FortuneFavorItem FortunesFavorObject => PickupObjectDatabase.GetById(FortunesFavorId).As<FortuneFavorItem>();
        public static JetpackItem JetpackObject => PickupObjectDatabase.GetById(JetpackId).As<JetpackItem>();
        public static Gun RaidenCoilObject => PickupObjectDatabase.GetById(RaidenCoilId).As<Gun>();
        public static SpawnObjectPlayerItem BombObject => PickupObjectDatabase.GetById(BombId).As<SpawnObjectPlayerItem>();
        public static SpawnObjectPlayerItem IceBombObject => PickupObjectDatabase.GetById(IceBombId).As<SpawnObjectPlayerItem>();
        public static BasicStatPickup MagicSweetObject => PickupObjectDatabase.GetById(MagicSweetId).As<BasicStatPickup>();
        public static BasicStatPickup HeavyBulletsObject => PickupObjectDatabase.GetById(HeavyBulletsId).As<BasicStatPickup>();
        public static CartographersRingItem CartographersRingObject => PickupObjectDatabase.GetById(CartographersRingId).As<CartographersRingItem>();
        public static BasicStatPickup RocketPoweredBulletsObject => PickupObjectDatabase.GetById(RocketPoweredBulletsId).As<BasicStatPickup>();
        public static BasicStatPickup BionicLegObject => PickupObjectDatabase.GetById(BionicLegId).As<BasicStatPickup>();
        public static BasicStatPickup BallotObject => PickupObjectDatabase.GetById(BallotId).As<BasicStatPickup>();
        public static OnKillEnemyItem AmmoSynthesizerObject => PickupObjectDatabase.GetById(AmmoSynthesizerId).As<OnKillEnemyItem>();
        public static BasicStatPickup EyepatchObject => PickupObjectDatabase.GetById(EyepatchId).As<BasicStatPickup>();
        public static MetronomeItem MetronomeObject => PickupObjectDatabase.GetById(MetronomeId).As<MetronomeItem>();
        public static HealthPickup ArmorObject => PickupObjectDatabase.GetById(ArmorId).As<HealthPickup>();
        public static Gun DisintegratorObject => PickupObjectDatabase.GetById(DisintegratorId).As<Gun>();
        public static Gun BlunderbussObject => PickupObjectDatabase.GetById(BlunderbussId).As<Gun>();
        public static Gun PulseCannonObject => PickupObjectDatabase.GetById(PulseCannonId).As<Gun>();
        public static Gun CactusObject => PickupObjectDatabase.GetById(CactusId).As<Gun>();
        public static Gun FlameHandObject => PickupObjectDatabase.GetById(FlameHandId).As<Gun>();
        public static Gun ShotbowObject => PickupObjectDatabase.GetById(ShotbowId).As<Gun>();
        public static BasicStatPickup JunkObject => PickupObjectDatabase.GetById(JunkId).As<BasicStatPickup>();
        public static Gun RubeAdyneMk2Object => PickupObjectDatabase.GetById(RubeAdyneMk2Id).As<Gun>();
        public static Gun Com4nd0Object => PickupObjectDatabase.GetById(Com4nd0Id).As<Gun>();
        public static Gun GlacierObject => PickupObjectDatabase.GetById(GlacierId).As<Gun>();
        public static BasicStatPickup UtilityBeltObject => PickupObjectDatabase.GetById(UtilityBeltId).As<BasicStatPickup>();
        public static MiserlyProtectionItem RingOfMiserlyProtectionObject => PickupObjectDatabase.GetById(RingOfMiserlyProtectionId).As<MiserlyProtectionItem>();
        public static BasicStatPickup BackpackObject => PickupObjectDatabase.GetById(BackpackId).As<BasicStatPickup>();
        public static BasicStatPickup AmmoBeltObject => PickupObjectDatabase.GetById(AmmoBeltId).As<BasicStatPickup>();
        public static CogOfBattleItem CogOfBattleObject => PickupObjectDatabase.GetById(CogOfBattleId).As<CogOfBattleItem>();
        public static RemoteMineItem C4Object => PickupObjectDatabase.GetById(C4Id).As<RemoteMineItem>();
        public static GungeonMapItem MapObject => PickupObjectDatabase.GetById(MapId).As<GungeonMapItem>();
        public static SpawnProjectileOnDamagedItem HoneycombObject => PickupObjectDatabase.GetById(HoneycombId).As<SpawnProjectileOnDamagedItem>();
        public static SpawnItemOnRoomClearItem MasterOfUnlockingObject => PickupObjectDatabase.GetById(MasterOfUnlockingId).As<SpawnItemOnRoomClearItem>();
        public static Gun RubeAdynePrototypeObject => PickupObjectDatabase.GetById(RubeAdynePrototypeId).As<Gun>();
        public static Gun ShotgunFullOfHateObject => PickupObjectDatabase.GetById(ShotgunFullOfHateId).As<Gun>();
        public static Gun WitchPistolObject => PickupObjectDatabase.GetById(WitchPistolId).As<Gun>();
        public static Gun DragunfireObject => PickupObjectDatabase.GetById(DragunfireId).As<Gun>();
        public static KeyBulletPickup PlaceableKeyObject => PickupObjectDatabase.GetById(PlaceableKeyId).As<KeyBulletPickup>();
        public static BasicStatPickup LiesObject => PickupObjectDatabase.GetById(LiesId).As<BasicStatPickup>();
        public static Gun FaceMelterObject => PickupObjectDatabase.GetById(FaceMelterId).As<Gun>();
        public static Gun TShirtCannonObject => PickupObjectDatabase.GetById(TShirtCannonId).As<Gun>();
        public static Gun TheMembraneObject => PickupObjectDatabase.GetById(TheMembraneId).As<Gun>();
        public static Gun TheKilnObject => PickupObjectDatabase.GetById(TheKilnId).As<Gun>();
        public static Gun ShockRifleObject => PickupObjectDatabase.GetById(ShockRifleId).As<Gun>();
        public static Gun TrashcannonObject => PickupObjectDatabase.GetById(TrashcannonId).As<Gun>();
        public static SpawnObjectPlayerItem SingularityObject => PickupObjectDatabase.GetById(SingularityId).As<SpawnObjectPlayerItem>();
        public static Gun LaserLotusObject => PickupObjectDatabase.GetById(LaserLotusId).As<Gun>();
        public static Gun BigIronObject => PickupObjectDatabase.GetById(BigIronId).As<Gun>();
        public static RingOfPitFriendship AmuletOfThePitLordObject => PickupObjectDatabase.GetById(AmuletOfThePitLordId).As<RingOfPitFriendship>();
        public static GundromedaStrain GundromedaStrainObject => PickupObjectDatabase.GetById(GundromedaStrainId).As<GundromedaStrain>();
        public static BulletArmorItem GunknightHelmetObject => PickupObjectDatabase.GetById(GunknightHelmetId).As<BulletArmorItem>();
        public static BulletArmorItem GunknightGreavesObject => PickupObjectDatabase.GetById(GunknightGreavesId).As<BulletArmorItem>();
        public static BulletArmorItem GunknightGauntletObject => PickupObjectDatabase.GetById(GunknightGauntletId).As<BulletArmorItem>();
        public static BulletArmorItem GunknightArmorObject => PickupObjectDatabase.GetById(GunknightArmorId).As<BulletArmorItem>();
        public static SpawnItemOnRoomClearItem HeartSynthesizerObject => PickupObjectDatabase.GetById(HeartSynthesizerId).As<SpawnItemOnRoomClearItem>();
        public static BasicStatPickup OiledCylinderObject => PickupObjectDatabase.GetById(OiledCylinderId).As<BasicStatPickup>();
        public static SkeletonKeyItem ShelletonKeyObject => PickupObjectDatabase.GetById(ShelletonKeyId).As<SkeletonKeyItem>();
        public static EnemyBulletSpeedItem BloodyEyeObject => PickupObjectDatabase.GetById(BloodyEyeId).As<EnemyBulletSpeedItem>();
        public static ActiveGunVolleyModificationItem DoubleVisionObject => PickupObjectDatabase.GetById(DoubleVisionId).As<ActiveGunVolleyModificationItem>();
        public static Gun BlackHoleGunObject => PickupObjectDatabase.GetById(BlackHoleGunId).As<Gun>();
        public static ActiveItemCooldownItem IceCubeObject => PickupObjectDatabase.GetById(IceCubeId).As<ActiveItemCooldownItem>();
        public static BasicStatPickup GhostBulletsObject => PickupObjectDatabase.GetById(GhostBulletsId).As<BasicStatPickup>();
        public static PileOfDarkSoulsPickup PileOfSoulsObject => PickupObjectDatabase.GetById(PileOfSoulsId).As<PileOfDarkSoulsPickup>();
        public static ActiveBasicStatItem PotionOfGunFriendshipObject => PickupObjectDatabase.GetById(PotionOfGunFriendshipId).As<ActiveBasicStatItem>();
        public static Gun TanglerObject => PickupObjectDatabase.GetById(TanglerId).As<Gun>();
        public static Gun GungeonAntObject => PickupObjectDatabase.GetById(GungeonAntId).As<Gun>();
        public static Gun AlienEngineObject => PickupObjectDatabase.GetById(AlienEngineId).As<Gun>();
        public static Gun CrestfallerObject => PickupObjectDatabase.GetById(CrestfallerId).As<Gun>();
        public static Gun ProtonBackpackObject => PickupObjectDatabase.GetById(ProtonBackpackId).As<Gun>();
        public static Gun GrasschopperObject => PickupObjectDatabase.GetById(GrasschopperId).As<Gun>();
        public static Gun WinchesterRifleObject => PickupObjectDatabase.GetById(WinchesterRifleId).As<Gun>();
        public static Gun GreyMauserObject => PickupObjectDatabase.GetById(GreyMauserId).As<Gun>();
        public static Gun SerManuelsRevolverObject => PickupObjectDatabase.GetById(SerManuelsRevolverId).As<Gun>();
        public static Gun TheJudgeObject => PickupObjectDatabase.GetById(TheJudgeId).As<Gun>();
        public static Gun MachineFistObject => PickupObjectDatabase.GetById(MachineFistId).As<Gun>();
        public static BasicStatPickup DisarmingPersonalityObject => PickupObjectDatabase.GetById(DisarmingPersonalityId).As<BasicStatPickup>();
        public static PassiveReflectItem RollingEyeObject => PickupObjectDatabase.GetById(RollingEyeId).As<PassiveReflectItem>();
        public static DamageTypeModifierItem RingOfFireResistanceObject => PickupObjectDatabase.GetById(RingOfFireResistanceId).As<DamageTypeModifierItem>();
        public static PassiveGooperItem BugBootsObject => PickupObjectDatabase.GetById(BugBootsId).As<PassiveGooperItem>();
        public static Gun FossilizedGunObject => PickupObjectDatabase.GetById(FossilizedGunId).As<Gun>();
        public static Gun PeaShooterObject => PickupObjectDatabase.GetById(PeaShooterId).As<Gun>();
        public static Gun GunslingersAshesObject => PickupObjectDatabase.GetById(GunslingersAshesId).As<Gun>();
        public static Gun LuxinCannonObject => PickupObjectDatabase.GetById(LuxinCannonId).As<Gun>();
        public static Gun CharmedBowObject => PickupObjectDatabase.GetById(CharmedBowId).As<Gun>();
        public static SpawnObjectPlayerItem PortableTurretObject => PickupObjectDatabase.GetById(PortableTurretId).As<SpawnObjectPlayerItem>();
        public static Gun SawedOffObject => PickupObjectDatabase.GetById(SawedOffId).As<Gun>();
        public static SpawnObjectPlayerItem CigarettesObject => PickupObjectDatabase.GetById(CigarettesId).As<SpawnObjectPlayerItem>();
        public static BulletStatusEffectItem IrradiatedLeadObject => PickupObjectDatabase.GetById(IrradiatedLeadId).As<BulletStatusEffectItem>();
        public static SpawnObjectPlayerItem PoisonVialObject => PickupObjectDatabase.GetById(PoisonVialId).As<SpawnObjectPlayerItem>();
        public static RadialCharmItem CharmHornObject => PickupObjectDatabase.GetById(CharmHornId).As<RadialCharmItem>();
        public static Gun PlaguePistolObject => PickupObjectDatabase.GetById(PlaguePistolId).As<Gun>();
        public static Gun PlungerObject => PickupObjectDatabase.GetById(PlungerId).As<Gun>();
        public static SenseOfDirectionItem SenseOfDirectionObject => PickupObjectDatabase.GetById(SenseOfDirectionId).As<SenseOfDirectionItem>();
        public static Gun GunbowObject => PickupObjectDatabase.GetById(GunbowId).As<Gun>();
        public static BasicStatPickup BallisticBootsObject => PickupObjectDatabase.GetById(BallisticBootsId).As<BasicStatPickup>();
        public static BasicStatPickup LichyTriggerFingerObject => PickupObjectDatabase.GetById(LichyTriggerFingerId).As<BasicStatPickup>();
        public static SpawnItemOnRoomClearItem CoinCrownObject => PickupObjectDatabase.GetById(CoinCrownId).As<SpawnItemOnRoomClearItem>();
        public static CardboardBoxItem BoxObject => PickupObjectDatabase.GetById(BoxId).As<CardboardBoxItem>();
        public static BasicStatPickup OldKnightsShieldObject => PickupObjectDatabase.GetById(OldKnightsShieldId).As<BasicStatPickup>();
        public static Gun TutorialAk47Object => PickupObjectDatabase.GetById(TutorialAk47Id).As<Gun>();
        public static BasicStatPickup OldKnightsHelmObject => PickupObjectDatabase.GetById(OldKnightsHelmId).As<BasicStatPickup>();
        public static Gun Cold45Object => PickupObjectDatabase.GetById(Cold45Id).As<Gun>();
        public static SilencerItem BlankObject => PickupObjectDatabase.GetById(BlankId).As<SilencerItem>();
        public static Gun IceBreakerObject => PickupObjectDatabase.GetById(IceBreakerId).As<Gun>();
        public static Gun WristbowObject => PickupObjectDatabase.GetById(WristbowId).As<Gun>();
        public static Gun ParticulatorObject => PickupObjectDatabase.GetById(ParticulatorId).As<Gun>();
        public static Gun HegemonyCarbineObject => PickupObjectDatabase.GetById(HegemonyCarbineId).As<Gun>();
        public static Gun HelixObject => PickupObjectDatabase.GetById(HelixId).As<Gun>();
        public static Gun GildedHydraObject => PickupObjectDatabase.GetById(GildedHydraId).As<Gun>();
        public static PlayerOrbitalItem SpaceFriendObject => PickupObjectDatabase.GetById(SpaceFriendId).As<PlayerOrbitalItem>();
        public static BombCompanionAppItem IbombCompanionAppObject => PickupObjectDatabase.GetById(IbombCompanionAppId).As<BombCompanionAppItem>();
        public static RadialSlowItem AgedBellObject => PickupObjectDatabase.GetById(AgedBellId).As<RadialSlowItem>();
        public static DuctTapeItem DuctTapeObject => PickupObjectDatabase.GetById(DuctTapeId).As<DuctTapeItem>();
        public static HomingBulletsPassiveItem CrutchObject => PickupObjectDatabase.GetById(CrutchId).As<HomingBulletsPassiveItem>();
        public static GunVolleyModificationItem ScattershotObject => PickupObjectDatabase.GetById(ScattershotId).As<GunVolleyModificationItem>();
        public static DirectionalAttackActiveItem NapalmStrikeObject => PickupObjectDatabase.GetById(NapalmStrikeId).As<DirectionalAttackActiveItem>();
        public static NotePassiveItem InfuriatingNote1Object => PickupObjectDatabase.GetById(InfuriatingNote1Id).As<NotePassiveItem>();
        public static NotePassiveItem InfuriatingNote2Object => PickupObjectDatabase.GetById(InfuriatingNote2Id).As<NotePassiveItem>();
        public static NotePassiveItem InfuriatingNote3Object => PickupObjectDatabase.GetById(InfuriatingNote3Id).As<NotePassiveItem>();
        public static NotePassiveItem InfuriatingNote4Object => PickupObjectDatabase.GetById(InfuriatingNote4Id).As<NotePassiveItem>();
        public static NotePassiveItem InfuriatingNote5Object => PickupObjectDatabase.GetById(InfuriatingNote5Id).As<NotePassiveItem>();
        public static NotePassiveItem InfuriatingNote6Object => PickupObjectDatabase.GetById(InfuriatingNote6Id).As<NotePassiveItem>();
        public static PlayerOrbitalItem OwlObject => PickupObjectDatabase.GetById(OwlId).As<PlayerOrbitalItem>();
        public static GrapplingHookItem GrapplingHookObject => PickupObjectDatabase.GetById(GrapplingHookId).As<GrapplingHookItem>();
        public static Gun PrizePistolObject => PickupObjectDatabase.GetById(PrizePistolId).As<Gun>();
        public static DirectionalAttackActiveItem AirStrikeObject => PickupObjectDatabase.GetById(AirStrikeId).As<DirectionalAttackActiveItem>();
        public static AuraItem GungeonPepperObject => PickupObjectDatabase.GetById(GungeonPepperId).As<AuraItem>();
        public static AmazingChestAheadItem RingOfChestFriendshipObject => PickupObjectDatabase.GetById(RingOfChestFriendshipId).As<AmazingChestAheadItem>();
        public static BasicStatPickup AncientHerosBandanaObject => PickupObjectDatabase.GetById(AncientHerosBandanaId).As<BasicStatPickup>();
        public static HeavyBootsItem HeavyBootsObject => PickupObjectDatabase.GetById(HeavyBootsId).As<HeavyBootsItem>();
        public static EyeOfTheTigerItem BroccoliObject => PickupObjectDatabase.GetById(BroccoliId).As<EyeOfTheTigerItem>();
        public static HealingReceivedModificationItem AntibodyObject => PickupObjectDatabase.GetById(AntibodyId).As<HealingReceivedModificationItem>();
        public static IounStoneOrbitalItem PinkGuonStoneObject => PickupObjectDatabase.GetById(PinkGuonStoneId).As<IounStoneOrbitalItem>();
        public static PlayerOrbitalItem WhiteGuonStoneObject => PickupObjectDatabase.GetById(WhiteGuonStoneId).As<PlayerOrbitalItem>();
        public static PlayerOrbitalItem OrangeGuonStoneObject => PickupObjectDatabase.GetById(OrangeGuonStoneId).As<PlayerOrbitalItem>();
        public static IounStoneOrbitalItem ClearGuonStoneObject => PickupObjectDatabase.GetById(ClearGuonStoneId).As<IounStoneOrbitalItem>();
        public static EstusFlaskItem OldKnightsFlaskObject => PickupObjectDatabase.GetById(OldKnightsFlaskId).As<EstusFlaskItem>();
        public static IounStoneOrbitalItem RedGuonStoneObject => PickupObjectDatabase.GetById(RedGuonStoneId).As<IounStoneOrbitalItem>();
        public static IounStoneOrbitalItem BlueGuonStoneObject => PickupObjectDatabase.GetById(BlueGuonStoneId).As<IounStoneOrbitalItem>();
        public static EyeOfTheTigerItem RiddleOfLeadObject => PickupObjectDatabase.GetById(RiddleOfLeadId).As<EyeOfTheTigerItem>();
        public static IronCoinItem IronCoinObject => PickupObjectDatabase.GetById(IronCoinId).As<IronCoinItem>();
        public static LaserSightItem LaserSightObject => PickupObjectDatabase.GetById(LaserSightId).As<LaserSightItem>();
        public static Gun DarkMarkerObject => PickupObjectDatabase.GetById(DarkMarkerId).As<Gun>();
        public static Gun FlareGunObject => PickupObjectDatabase.GetById(FlareGunId).As<Gun>();
        public static SpiceItem SpiceObject => PickupObjectDatabase.GetById(SpiceId).As<SpiceItem>();
        public static BasicStatPickup FatBulletsObject => PickupObjectDatabase.GetById(FatBulletsId).As<BasicStatPickup>();
        public static BulletStatusEffectItem FrostBulletsObject => PickupObjectDatabase.GetById(FrostBulletsId).As<BulletStatusEffectItem>();
        public static SuperhotItem SuperHotWatchObject => PickupObjectDatabase.GetById(SuperHotWatchId).As<SuperhotItem>();
        public static BasicStatPickup DrumClipObject => PickupObjectDatabase.GetById(DrumClipId).As<BasicStatPickup>();
        public static CartographersRingItem GungeonBlueprintObject => PickupObjectDatabase.GetById(GungeonBlueprintId).As<CartographersRingItem>();
        public static HomingBulletsPassiveItem HomingBulletsObject => PickupObjectDatabase.GetById(HomingBulletsId).As<HomingBulletsPassiveItem>();
        public static RegenerationPassiveItem BloodBroochObject => PickupObjectDatabase.GetById(BloodBroochId).As<RegenerationPassiveItem>();
        public static BasicStatPickup Plus1BulletsObject => PickupObjectDatabase.GetById(Plus1BulletsId).As<BasicStatPickup>();
        public static GunVolleyModificationItem BackupGunObject => PickupObjectDatabase.GetById(BackupGunId).As<GunVolleyModificationItem>();
        public static BasicStatPickup BouncyBulletsObject => PickupObjectDatabase.GetById(BouncyBulletsId).As<BasicStatPickup>();
        public static SevenLeafCloverItem SevenLeafCloverObject => PickupObjectDatabase.GetById(SevenLeafCloverId).As<SevenLeafCloverItem>();
        public static SunglassesItem SunglassesObject => PickupObjectDatabase.GetById(SunglassesId).As<SunglassesItem>();
        public static HealPlayerItem MeatbunObject => PickupObjectDatabase.GetById(MeatbunId).As<HealPlayerItem>();
        public static Gun MolotovLauncherObject => PickupObjectDatabase.GetById(MolotovLauncherId).As<Gun>();
        public static MimicToothNecklaceItem MimicToothNecklaceObject => PickupObjectDatabase.GetById(MimicToothNecklaceId).As<MimicToothNecklaceItem>();
        public static MimicRingItem RingOfMimicFriendshipObject => PickupObjectDatabase.GetById(RingOfMimicFriendshipId).As<MimicRingItem>();
        public static BulletStatusEffectItem HotLeadObject => PickupObjectDatabase.GetById(HotLeadId).As<BulletStatusEffectItem>();
        public static ItemBlueprintItem MetashopBreachItemOldObject => PickupObjectDatabase.GetById(MetashopBreachItemOldId).As<ItemBlueprintItem>();
        public static CurrencyPickup HegemonyCreditObject => PickupObjectDatabase.GetById(HegemonyCreditId).As<CurrencyPickup>();
        public static ComplexProjectileModifier ShockRoundsObject => PickupObjectDatabase.GetById(ShockRoundsId).As<ComplexProjectileModifier>();
        public static Gun SuperSpaceTurtlesGunObject => PickupObjectDatabase.GetById(SuperSpaceTurtlesGunId).As<Gun>();
        public static CompanionItem DogObject => PickupObjectDatabase.GetById(DogId).As<CompanionItem>();
        public static CompanionItem SuperSpaceTurtleObject => PickupObjectDatabase.GetById(SuperSpaceTurtleId).As<CompanionItem>();
        public static BulletThatCanKillThePast BulletThatCanKillThePastObject => PickupObjectDatabase.GetById(BulletThatCanKillThePastId).As<BulletThatCanKillThePast>();
        public static ComplexProjectileModifier ExplosiveRoundsObject => PickupObjectDatabase.GetById(ExplosiveRoundsId).As<ComplexProjectileModifier>();
        public static CathedralCrestItem OldCrestObject => PickupObjectDatabase.GetById(OldCrestId).As<CathedralCrestItem>();
        public static EscapeRopeItem EscapeRopeObject => PickupObjectDatabase.GetById(EscapeRopeId).As<EscapeRopeItem>();
        public static WingsItem WaxWingsObject => PickupObjectDatabase.GetById(WaxWingsId).As<WingsItem>();
        public static SpawnObjectPlayerItem ClusterMineObject => PickupObjectDatabase.GetById(ClusterMineId).As<SpawnObjectPlayerItem>();
        public static BasicStatPickup CloranthyRingObject => PickupObjectDatabase.GetById(CloranthyRingId).As<BasicStatPickup>();
        public static WingsItem FairyWingsObject => PickupObjectDatabase.GetById(FairyWingsId).As<WingsItem>();
        public static ExtraLifeItem CloneObject => PickupObjectDatabase.GetById(CloneId).As<ExtraLifeItem>();
        public static HelmetItem BlastHelmetObject => PickupObjectDatabase.GetById(BlastHelmetId).As<HelmetItem>();
        public static PassiveGooperItem MonsterBloodObject => PickupObjectDatabase.GetById(MonsterBloodId).As<PassiveGooperItem>();
        public static NanomachinesItem NanomachinesObject => PickupObjectDatabase.GetById(NanomachinesId).As<NanomachinesItem>();
        public static DownwellBootsItem GunbootsObject => PickupObjectDatabase.GetById(GunbootsId).As<DownwellBootsItem>();
        public static SpecialKeyItem GnawedKeyObject => PickupObjectDatabase.GetById(GnawedKeyId).As<SpecialKeyItem>();
        public static CompanionItem R2g2Object => PickupObjectDatabase.GetById(R2g2Id).As<CompanionItem>();
        public static ActiveSummonItem TicketObject => PickupObjectDatabase.GetById(TicketId).As<ActiveSummonItem>();
        public static BlankModificationItem GoldAmmoletObject => PickupObjectDatabase.GetById(GoldAmmoletId).As<BlankModificationItem>();
        public static BlankModificationItem LodestoneAmmoletObject => PickupObjectDatabase.GetById(LodestoneAmmoletId).As<BlankModificationItem>();
        public static ModifyProjectileOnEnemyImpact AngryBulletsObject => PickupObjectDatabase.GetById(AngryBulletsId).As<ModifyProjectileOnEnemyImpact>();
        public static BlankModificationItem ChaosAmmoletObject => PickupObjectDatabase.GetById(ChaosAmmoletId).As<BlankModificationItem>();
        public static CoopPassiveItem Number2Object => PickupObjectDatabase.GetById(Number2Id).As<CoopPassiveItem>();
        public static Gun CorsairObject => PickupObjectDatabase.GetById(CorsairId).As<Gun>();
        public static Gun ChargeShotObject => PickupObjectDatabase.GetById(ChargeShotId).As<Gun>();
        public static Gun ZillaShotgunObject => PickupObjectDatabase.GetById(ZillaShotgunId).As<Gun>();
        public static Gun TheEmperorObject => PickupObjectDatabase.GetById(TheEmperorId).As<Gun>();
        public static Gun ScienceCannonObject => PickupObjectDatabase.GetById(ScienceCannonId).As<Gun>();
        public static Gun LilBomberObject => PickupObjectDatabase.GetById(LilBomberId).As<Gun>();
        public static Gun MutationObject => PickupObjectDatabase.GetById(MutationId).As<Gun>();
        public static Gun WindUpGunObject => PickupObjectDatabase.GetById(WindUpGunId).As<Gun>();
        public static Gun SilencerObject => PickupObjectDatabase.GetById(SilencerId).As<Gun>();
        public static Gun PitchforkObject => PickupObjectDatabase.GetById(PitchforkId).As<Gun>();
        public static Gun CompositeGunObject => PickupObjectDatabase.GetById(CompositeGunId).As<Gun>();
        public static Gun GuntherObject => PickupObjectDatabase.GetById(GuntherId).As<Gun>();
        public static Gun MahogunyObject => PickupObjectDatabase.GetById(MahogunyId).As<Gun>();
        public static Gun LowerCaseRObject => PickupObjectDatabase.GetById(LowerCaseRId).As<Gun>();
        public static Gun BuzzkillObject => PickupObjectDatabase.GetById(BuzzkillId).As<Gun>();
        public static BlankModificationItem UraniumAmmoletObject => PickupObjectDatabase.GetById(UraniumAmmoletId).As<BlankModificationItem>();
        public static BlankModificationItem CopperAmmoletObject => PickupObjectDatabase.GetById(CopperAmmoletId).As<BlankModificationItem>();
        public static BlankModificationItem FrostAmmoletObject => PickupObjectDatabase.GetById(FrostAmmoletId).As<BlankModificationItem>();
        public static Gun FightsabreObject => PickupObjectDatabase.GetById(FightsabreId).As<Gun>();
        public static Gun HuntsmanObject => PickupObjectDatabase.GetById(HuntsmanId).As<Gun>();
        public static Gun ShotgrubObject => PickupObjectDatabase.GetById(ShotgrubId).As<Gun>();
        public static AncientPrimerItem PrimePrimerObject => PickupObjectDatabase.GetById(PrimePrimerId).As<AncientPrimerItem>();
        public static AstralSlugItem PlanarLeadObject => PickupObjectDatabase.GetById(PlanarLeadId).As<AstralSlugItem>();
        public static ObsidianShellItem ObsidianShellCasingObject => PickupObjectDatabase.GetById(ObsidianShellCasingId).As<ObsidianShellItem>();
        public static ArcaneGunpowderItem ArcaneGunpowderObject => PickupObjectDatabase.GetById(ArcaneGunpowderId).As<ArcaneGunpowderItem>();
        public static ComplexProjectileModifier ShadowBulletsObject => PickupObjectDatabase.GetById(ShadowBulletsId).As<ComplexProjectileModifier>();
        public static RagePassiveItem EnragingPhotoObject => PickupObjectDatabase.GetById(EnragingPhotoId).As<RagePassiveItem>();
        public static BasicStatPickup MilitaryTrainingObject => PickupObjectDatabase.GetById(MilitaryTrainingId).As<BasicStatPickup>();
        public static Gun ChromesteelAssaultRifleObject => PickupObjectDatabase.GetById(ChromesteelAssaultRifleId).As<Gun>();
        public static LockpicksItem TrustyLockpicksObject => PickupObjectDatabase.GetById(TrustyLockpicksId).As<LockpicksItem>();
        public static Gun CatClawObject => PickupObjectDatabase.GetById(CatClawId).As<Gun>();
        public static Gun RailgunObject => PickupObjectDatabase.GetById(RailgunId).As<Gun>();
        public static Gun CompressedAirTankObject => PickupObjectDatabase.GetById(CompressedAirTankId).As<Gun>();
        public static Gun SnakemakerObject => PickupObjectDatabase.GetById(SnakemakerId).As<Gun>();
        public static Gun BulletBoreObject => PickupObjectDatabase.GetById(BulletBoreId).As<Gun>();
        public static Gun TrickGunObject => PickupObjectDatabase.GetById(TrickGunId).As<Gun>();
        public static SpawnProjectileOnDamagedItem HeartOfIceObject => PickupObjectDatabase.GetById(HeartOfIceId).As<SpawnProjectileOnDamagedItem>();
        public static Gun MassShotgunObject => PickupObjectDatabase.GetById(MassShotgunId).As<Gun>();
        public static SpawnObjectPlayerItem MolotovObject => PickupObjectDatabase.GetById(MolotovId).As<SpawnObjectPlayerItem>();
        public static BasicStatPickup HuntersJournalObject => PickupObjectDatabase.GetById(HuntersJournalId).As<BasicStatPickup>();
        public static Gun ElTigreObject => PickupObjectDatabase.GetById(ElTigreId).As<Gun>();
        public static Gun BaitLauncherObject => PickupObjectDatabase.GetById(BaitLauncherId).As<Gun>();
        public static Gun PrototypeRailgunObject => PickupObjectDatabase.GetById(PrototypeRailgunId).As<Gun>();
        public static Gun RcRocketObject => PickupObjectDatabase.GetById(RcRocketId).As<Gun>();
        public static ClipBulletModifierItem AlphaBulletsObject => PickupObjectDatabase.GetById(AlphaBulletsId).As<ClipBulletModifierItem>();
        public static ClipBulletModifierItem OmegaBulletsObject => PickupObjectDatabase.GetById(OmegaBulletsId).As<ClipBulletModifierItem>();
        public static MoveAmmoToClipItem EasyReloadBulletsObject => PickupObjectDatabase.GetById(EasyReloadBulletsId).As<MoveAmmoToClipItem>();
        public static Gun BrickBreakerObject => PickupObjectDatabase.GetById(BrickBreakerId).As<Gun>();
        public static Gun ExcaliberObject => PickupObjectDatabase.GetById(ExcaliberId).As<Gun>();
        public static Gun DerringerObject => PickupObjectDatabase.GetById(DerringerId).As<Gun>();
        public static Gun ShotgunFullOfLoveObject => PickupObjectDatabase.GetById(ShotgunFullOfLoveId).As<Gun>();
        public static Gun BetrayersShieldObject => PickupObjectDatabase.GetById(BetrayersShieldId).As<Gun>();
        public static Gun TripleCrossbowObject => PickupObjectDatabase.GetById(TripleCrossbowId).As<Gun>();
        public static Gun SlingObject => PickupObjectDatabase.GetById(SlingId).As<Gun>();
        public static Gun FlashRayObject => PickupObjectDatabase.GetById(FlashRayId).As<Gun>();
        public static Gun PhoenixObject => PickupObjectDatabase.GetById(PhoenixId).As<Gun>();
        public static Gun HexagunObject => PickupObjectDatabase.GetById(HexagunId).As<Gun>();
        public static Gun FrostGiantObject => PickupObjectDatabase.GetById(FrostGiantId).As<Gun>();
        public static Gun CobaltHammerObject => PickupObjectDatabase.GetById(CobaltHammerId).As<Gun>();
        public static NPCCellKeyItem CellKeyObject => PickupObjectDatabase.GetById(CellKeyId).As<NPCCellKeyItem>();
        public static Gun AnvillainObject => PickupObjectDatabase.GetById(AnvillainId).As<Gun>();
        public static Gun MineCutterObject => PickupObjectDatabase.GetById(MineCutterId).As<Gun>();
        public static Gun StaffOfFirepowerObject => PickupObjectDatabase.GetById(StaffOfFirepowerId).As<Gun>();
        public static TableFlipItem TableTechSightObject => PickupObjectDatabase.GetById(TableTechSightId).As<TableFlipItem>();
        public static TableFlipItem TableTechMoneyObject => PickupObjectDatabase.GetById(TableTechMoneyId).As<TableFlipItem>();
        public static TableFlipItem TableTechRocketObject => PickupObjectDatabase.GetById(TableTechRocketId).As<TableFlipItem>();
        public static TableFlipItem TableTechRageObject => PickupObjectDatabase.GetById(TableTechRageId).As<TableFlipItem>();
        public static TableFlipItem TableTechBlanksObject => PickupObjectDatabase.GetById(TableTechBlanksId).As<TableFlipItem>();
        public static Gun GungineObject => PickupObjectDatabase.GetById(GungineId).As<Gun>();
        public static Gun SnowballerObject => PickupObjectDatabase.GetById(SnowballerId).As<Gun>();
        public static CorpseExplodeActiveItem MeltedRockObject => PickupObjectDatabase.GetById(MeltedRockId).As<CorpseExplodeActiveItem>();
        public static Gun SirenObject => PickupObjectDatabase.GetById(SirenId).As<Gun>();
        public static Gun RattlerObject => PickupObjectDatabase.GetById(RattlerId).As<Gun>();
        public static ChamberOfEvilItem SixthChamberObject => PickupObjectDatabase.GetById(SixthChamberId).As<ChamberOfEvilItem>();
        public static RobotUnlockTelevisionItem BustedTelevisionObject => PickupObjectDatabase.GetById(BustedTelevisionId).As<RobotUnlockTelevisionItem>();
        public static BulletStatusEffectItem BatteryBulletsObject => PickupObjectDatabase.GetById(BatteryBulletsId).As<BulletStatusEffectItem>();
        public static DirectionalAttackActiveItem CoolantLeakObject => PickupObjectDatabase.GetById(CoolantLeakId).As<DirectionalAttackActiveItem>();
        public static HealPlayerItem FriendshipCookieObject => PickupObjectDatabase.GetById(FriendshipCookieId).As<HealPlayerItem>();
        public static HeroSwordItem HerosSwordObject => PickupObjectDatabase.GetById(HerosSwordId).As<HeroSwordItem>();
        public static LiveAmmoItem LiveAmmoObject => PickupObjectDatabase.GetById(LiveAmmoId).As<LiveAmmoItem>();
        public static RobotArmItem ReplacementArmObject => PickupObjectDatabase.GetById(ReplacementArmId).As<RobotArmItem>();
        public static RobotArmBalloonsItem BalloonObject => PickupObjectDatabase.GetById(BalloonId).As<RobotArmBalloonsItem>();
        public static Gun BlasphemyObject => PickupObjectDatabase.GetById(BlasphemyId).As<Gun>();
        public static ItemBlueprintItem TrorcBreachItemObject => PickupObjectDatabase.GetById(TrorcBreachItemId).As<ItemBlueprintItem>();
        public static BasicStatPickup HeartHolsterObject => PickupObjectDatabase.GetById(HeartHolsterId).As<BasicStatPickup>();
        public static BasicStatPickup HeartLunchboxObject => PickupObjectDatabase.GetById(HeartLunchboxId).As<BasicStatPickup>();
        public static BasicStatPickup HeartLocketObject => PickupObjectDatabase.GetById(HeartLocketId).As<BasicStatPickup>();
        public static BasicStatPickup HeartBottleObject => PickupObjectDatabase.GetById(HeartBottleId).As<BasicStatPickup>();
        public static BasicStatPickup HeartPurseObject => PickupObjectDatabase.GetById(HeartPurseId).As<BasicStatPickup>();
        public static BasicStatPickup ShotgaColaObject => PickupObjectDatabase.GetById(ShotgaColaId).As<BasicStatPickup>();
        public static BasicStatPickup ShotgunCoffeeObject => PickupObjectDatabase.GetById(ShotgunCoffeeId).As<BasicStatPickup>();
        public static ItemBlueprintItem GooptonBreachItemObject => PickupObjectDatabase.GetById(GooptonBreachItemId).As<ItemBlueprintItem>();
        public static EnemyBulletSpeedItem LiquidValkyrieObject => PickupObjectDatabase.GetById(LiquidValkyrieId).As<EnemyBulletSpeedItem>();
        public static SpawnObjectPlayerItem JarOfBeesObject => PickupObjectDatabase.GetById(JarOfBeesId).As<SpawnObjectPlayerItem>();
        public static TemporaryInvulnerabilityPlayerItem StuffedStarObject => PickupObjectDatabase.GetById(StuffedStarId).As<TemporaryInvulnerabilityPlayerItem>();
        public static OnDamagedPassiveItem BulletIdolObject => PickupObjectDatabase.GetById(BulletIdolId).As<OnDamagedPassiveItem>();
        public static OnPurchasePassiveItem MustacheObject => PickupObjectDatabase.GetById(MustacheId).As<OnPurchasePassiveItem>();
        public static BlinkPassiveItem BloodiedScarfObject => PickupObjectDatabase.GetById(BloodiedScarfId).As<BlinkPassiveItem>();
        public static GunClassPassiveItem MuscleRelaxantObject => PickupObjectDatabase.GetById(MuscleRelaxantId).As<GunClassPassiveItem>();
        public static SpawnObjectPlayerItem ExplosiveDecoyObject => PickupObjectDatabase.GetById(ExplosiveDecoyId).As<SpawnObjectPlayerItem>();
        public static DamageEnemiesInRadiusItem BracketKeyObject => PickupObjectDatabase.GetById(BracketKeyId).As<DamageEnemiesInRadiusItem>();
        public static ThrownGunPassiveItem RubyBraceletObject => PickupObjectDatabase.GetById(RubyBraceletId).As<ThrownGunPassiveItem>();
        public static ThrownGunPassiveItem EmeraldBraceletObject => PickupObjectDatabase.GetById(EmeraldBraceletId).As<ThrownGunPassiveItem>();
        public static CompanionItem BadgeObject => PickupObjectDatabase.GetById(BadgeId).As<CompanionItem>();
        public static TargetedAttackPlayerItem BigBoyObject => PickupObjectDatabase.GetById(BigBoyId).As<TargetedAttackPlayerItem>();
        public static Gun TridentObject => PickupObjectDatabase.GetById(TridentId).As<Gun>();
        public static Gun TheScramblerObject => PickupObjectDatabase.GetById(TheScramblerId).As<Gun>();
        public static ActiveShieldItem ShieldOfTheMaidenObject => PickupObjectDatabase.GetById(ShieldOfTheMaidenId).As<ActiveShieldItem>();
        public static SpawnObjectPlayerItem BoomerangObject => PickupObjectDatabase.GetById(BoomerangId).As<SpawnObjectPlayerItem>();
        public static TeleporterPrototypeItem TeleporterPrototypeObject => PickupObjectDatabase.GetById(TeleporterPrototypeId).As<TeleporterPrototypeItem>();
        public static SpawnItemOnRoomClearItem ArmorSynthesizerObject => PickupObjectDatabase.GetById(ArmorSynthesizerId).As<SpawnItemOnRoomClearItem>();
        public static CompanionItem PigObject => PickupObjectDatabase.GetById(PigId).As<CompanionItem>();
        public static PassiveGooperItem SpongeObject => PickupObjectDatabase.GetById(SpongeId).As<PassiveGooperItem>();
        public static DamageTypeModifierItem GasMaskObject => PickupObjectDatabase.GetById(GasMaskId).As<DamageTypeModifierItem>();
        public static DamageTypeModifierItem HazmatSuitObject => PickupObjectDatabase.GetById(HazmatSuitId).As<DamageTypeModifierItem>();
        public static OnPlayerItemUsedItem RingOfTriggersObject => PickupObjectDatabase.GetById(RingOfTriggersId).As<OnPlayerItemUsedItem>();
        public static SpikedArmorItem ArmorOfThornsObject => PickupObjectDatabase.GetById(ArmorOfThornsId).As<SpikedArmorItem>();
        public static GaseousFormPlayerItem RingOfEtherealFormObject => PickupObjectDatabase.GetById(RingOfEtherealFormId).As<GaseousFormPlayerItem>();
        public static SpawnObjectPlayerItem ChaffGrenadeObject => PickupObjectDatabase.GetById(ChaffGrenadeId).As<SpawnObjectPlayerItem>();
        public static CompanionItem BlankCompanionsRingObject => PickupObjectDatabase.GetById(BlankCompanionsRingId).As<CompanionItem>();
        public static ConsumableStealthItem SmokeBombObject => PickupObjectDatabase.GetById(SmokeBombId).As<ConsumableStealthItem>();
        public static RingOfResourcefulRatItem RingOfTheResourcefulRatObject => PickupObjectDatabase.GetById(RingOfTheResourcefulRatId).As<RingOfResourcefulRatItem>();
        public static Gun ShellegunObject => PickupObjectDatabase.GetById(ShellegunId).As<Gun>();
        public static TableFlipItem TableTechStunObject => PickupObjectDatabase.GetById(TableTechStunId).As<TableFlipItem>();
        public static IounStoneOrbitalItem GreenGuonStoneObject => PickupObjectDatabase.GetById(GreenGuonStoneId).As<IounStoneOrbitalItem>();
        public static BasicStatPickup MasterRound5Object => PickupObjectDatabase.GetById(MasterRound5Id).As<BasicStatPickup>();
        public static BasicStatPickup MasterRound3Object => PickupObjectDatabase.GetById(MasterRound3Id).As<BasicStatPickup>();
        public static BasicStatPickup MasterRound1Object => PickupObjectDatabase.GetById(MasterRound1Id).As<BasicStatPickup>();
        public static BasicStatPickup MasterRound4Object => PickupObjectDatabase.GetById(MasterRound4Id).As<BasicStatPickup>();
        public static BasicStatPickup MasterRound2Object => PickupObjectDatabase.GetById(MasterRound2Id).As<BasicStatPickup>();
        public static Gun GummyGunObject => PickupObjectDatabase.GetById(GummyGunId).As<Gun>();
        public static BasicStatPickup HiddenCompartmentObject => PickupObjectDatabase.GetById(HiddenCompartmentId).As<BasicStatPickup>();
        public static Gun AbyssalTentacleObject => PickupObjectDatabase.GetById(AbyssalTentacleId).As<Gun>();
        public static Gun QuadLaserObject => PickupObjectDatabase.GetById(QuadLaserId).As<Gun>();
        public static Gun MicrotransactionGunObject => PickupObjectDatabase.GetById(MicrotransactionGunId).As<Gun>();
        public static Gun OriguniObject => PickupObjectDatabase.GetById(OriguniId).As<Gun>();
        public static Gun BananaObject => PickupObjectDatabase.GetById(BananaId).As<Gun>();
        public static Gun SuperMeatGunObject => PickupObjectDatabase.GetById(SuperMeatGunId).As<Gun>();
        public static Gun MakeshiftCannonObject => PickupObjectDatabase.GetById(MakeshiftCannonId).As<Gun>();
        public static Gun CameraObject => PickupObjectDatabase.GetById(CameraId).As<Gun>();
        public static Gun GunzhengObject => PickupObjectDatabase.GetById(GunzhengId).As<Gun>();
        public static Gun TetrominatorObject => PickupObjectDatabase.GetById(TetrominatorId).As<Gun>();
        public static Gun DevolverObject => PickupObjectDatabase.GetById(DevolverId).As<Gun>();
        public static HealPlayerItem OrangeObject => PickupObjectDatabase.GetById(OrangeId).As<HealPlayerItem>();
        public static Gun TreadnaughtCannonObject => PickupObjectDatabase.GetById(TreadnaughtCannonId).As<Gun>();
        public static ChestBrokenImprovementItem BookOfChestAnatomyObject => PickupObjectDatabase.GetById(BookOfChestAnatomyId).As<ChestBrokenImprovementItem>();
        public static ChestBrokenItem RingOfChestVampirismObject => PickupObjectDatabase.GetById(RingOfChestVampirismId).As<ChestBrokenItem>();
        public static ExtraLifeItem GunSoulObject => PickupObjectDatabase.GetById(GunSoulId).As<ExtraLifeItem>();
        public static SnitchBrickItem BrickOfCashObject => PickupObjectDatabase.GetById(BrickOfCashId).As<SnitchBrickItem>();
        public static PlayerOrbitalItem WingmanObject => PickupObjectDatabase.GetById(WingmanId).As<PlayerOrbitalItem>();
        public static CompanionItem WolfObject => PickupObjectDatabase.GetById(WolfId).As<CompanionItem>();
        public static BriefcaseFullOfCashItem BriefcaseOfCashObject => PickupObjectDatabase.GetById(BriefcaseOfCashId).As<BriefcaseFullOfCashItem>();
        public static BasicStatPickup GalacticMedalOfValorObject => PickupObjectDatabase.GetById(GalacticMedalOfValorId).As<BasicStatPickup>();
        public static OurPowersCombinedItem UnityObject => PickupObjectDatabase.GetById(UnityId).As<OurPowersCombinedItem>();
        public static ItemBlueprintItem MetashopBreachItemGunObject => PickupObjectDatabase.GetById(MetashopBreachItemGunId).As<ItemBlueprintItem>();
        public static ReusableBlankitem ElderBlankObject => PickupObjectDatabase.GetById(ElderBlankId).As<ReusableBlankitem>();
        public static FireOnReloadItem HipHolsterObject => PickupObjectDatabase.GetById(HipHolsterId).As<FireOnReloadItem>();
        public static ItemBlueprintItem MetashopBreachItemItemObject => PickupObjectDatabase.GetById(MetashopBreachItemItemId).As<ItemBlueprintItem>();
        public static DoNothingActiveItem PilotsPastRocketsObject => PickupObjectDatabase.GetById(PilotsPastRocketsId).As<DoNothingActiveItem>();
        public static Gun BulletObject => PickupObjectDatabase.GetById(BulletId).As<Gun>();
        public static Gun HyperLightBlasterObject => PickupObjectDatabase.GetById(HyperLightBlasterId).As<Gun>();
        public static Gun WickedSisterSynergyObject => PickupObjectDatabase.GetById(WickedSisterSynergyId).As<Gun>();
        public static Gun ReallySpecialLuteObject => PickupObjectDatabase.GetById(ReallySpecialLuteId).As<Gun>();
        public static Gun StarpewObject => PickupObjectDatabase.GetById(StarpewId).As<Gun>();
        public static Gun DuelingLaserObject => PickupObjectDatabase.GetById(DuelingLaserId).As<Gun>();
        public static Gun Jk47Object => PickupObjectDatabase.GetById(Jk47Id).As<Gun>();
        public static Gun ThirdPartyControllerObject => PickupObjectDatabase.GetById(ThirdPartyControllerId).As<Gun>();
        public static Gun ShellObject => PickupObjectDatabase.GetById(ShellId).As<Gun>();
        public static Gun PoxcannonObject => PickupObjectDatabase.GetById(PoxcannonId).As<Gun>();
        public static Gun DirectionalPadObject => PickupObjectDatabase.GetById(DirectionalPadId).As<Gun>();
        public static Gun MourningStarObject => PickupObjectDatabase.GetById(MourningStarId).As<Gun>();
        public static Gun TripleGunObject => PickupObjectDatabase.GetById(TripleGunId).As<Gun>();
        public static Gun TripleGunForm2Object => PickupObjectDatabase.GetById(TripleGunForm2Id).As<Gun>();
        public static Gun TripleGunForm3Object => PickupObjectDatabase.GetById(TripleGunForm3Id).As<Gun>();
        public static Gun CombinedRifleObject => PickupObjectDatabase.GetById(CombinedRifleId).As<Gun>();
        public static Gun BalloonGunObject => PickupObjectDatabase.GetById(BalloonGunId).As<Gun>();
        public static ProjectileRandomizerItem ChanceBulletsObject => PickupObjectDatabase.GetById(ChanceBulletsId).As<ProjectileRandomizerItem>();
        public static StoutBulletsItem StoutBulletsObject => PickupObjectDatabase.GetById(StoutBulletsId).As<StoutBulletsItem>();
        public static RandomProjectileReplacementItem Bloody9MmObject => PickupObjectDatabase.GetById(Bloody9MmId).As<RandomProjectileReplacementItem>();
        public static PuzzleBoxItem LamentConfigurumObject => PickupObjectDatabase.GetById(LamentConfigurumId).As<PuzzleBoxItem>();
        public static PegasusBootsItem SpringheelBootsObject => PickupObjectDatabase.GetById(SpringheelBootsId).As<PegasusBootsItem>();
        public static BulletStatusEffectItem CharmingRoundsObject => PickupObjectDatabase.GetById(CharmingRoundsId).As<BulletStatusEffectItem>();
        public static ReturnAmmoOnMissedShotItem ZombieBulletsObject => PickupObjectDatabase.GetById(ZombieBulletsId).As<ReturnAmmoOnMissedShotItem>();
        public static BattleStandardItem BattleStandardObject => PickupObjectDatabase.GetById(BattleStandardId).As<BattleStandardItem>();
        public static GuidedBulletsPassiveItem RemoteBulletsObject => PickupObjectDatabase.GetById(RemoteBulletsId).As<GuidedBulletsPassiveItem>();
        public static ComplexProjectileModifier FlakBulletsObject => PickupObjectDatabase.GetById(FlakBulletsId).As<ComplexProjectileModifier>();
        public static ScalingStatBoostItem GildedBulletsObject => PickupObjectDatabase.GetById(GildedBulletsId).As<ScalingStatBoostItem>();
        public static BulletStatusEffectItem MagicBulletsObject => PickupObjectDatabase.GetById(MagicBulletsId).As<BulletStatusEffectItem>();
        public static Gun RealCoolBowObject => PickupObjectDatabase.GetById(RealCoolBowId).As<Gun>();
        public static RelodestoneItem RelodestoneObject => PickupObjectDatabase.GetById(RelodestoneId).As<RelodestoneItem>();
        public static Gun VorpalGunObject => PickupObjectDatabase.GetById(VorpalGunId).As<Gun>();
        public static SilverBulletsPassiveItem SilverBulletsObject => PickupObjectDatabase.GetById(SilverBulletsId).As<SilverBulletsPassiveItem>();
        public static Gun BoxingGloveObject => PickupObjectDatabase.GetById(BoxingGloveId).As<Gun>();
        public static Gun GlassCannonObject => PickupObjectDatabase.GetById(GlassCannonId).As<Gun>();
        public static Gun CaseyObject => PickupObjectDatabase.GetById(CaseyId).As<Gun>();
        public static Gun StrafeGunObject => PickupObjectDatabase.GetById(StrafeGunId).As<Gun>();
        public static Gun ThePredatorObject => PickupObjectDatabase.GetById(ThePredatorId).As<Gun>();
        public static Gun Ac15UnarmoredObject => PickupObjectDatabase.GetById(Ac15UnarmoredId).As<Gun>();
        public static Gun Ac15Object => PickupObjectDatabase.GetById(Ac15Id).As<Gun>();
        public static Gun WindgunnerObject => PickupObjectDatabase.GetById(WindgunnerId).As<Gun>();
        public static Gun KnightsGunObject => PickupObjectDatabase.GetById(KnightsGunId).As<Gun>();
        public static Gun CrownOfGunsObject => PickupObjectDatabase.GetById(CrownOfGunsId).As<Gun>();
        public static EmptyBottleItem BottleObject => PickupObjectDatabase.GetById(BottleId).As<EmptyBottleItem>();
        public static Gun TheFatLineObject => PickupObjectDatabase.GetById(TheFatLineId).As<Gun>();
        public static Gun TheExoticObject => PickupObjectDatabase.GetById(TheExoticId).As<Gun>();
        public static AutoblankVestItem FullMetalJacketObject => PickupObjectDatabase.GetById(FullMetalJacketId).As<AutoblankVestItem>();
        public static IounStoneOrbitalItem GlassGuonStoneObject => PickupObjectDatabase.GetById(GlassGuonStoneId).As<IounStoneOrbitalItem>();
        public static Gun RadGunObject => PickupObjectDatabase.GetById(RadGunId).As<Gun>();
        public static FireVolleyOnRollItem RollBombObject => PickupObjectDatabase.GetById(RollBombId).As<FireVolleyOnRollItem>();
        public static GunVolleyModificationItem HelixBulletsObject => PickupObjectDatabase.GetById(HelixBulletsId).As<GunVolleyModificationItem>();
        public static ChaosBulletsItem ChaosBulletsObject => PickupObjectDatabase.GetById(ChaosBulletsId).As<ChaosBulletsItem>();
        public static YellowChamberItem YellowChamberObject => PickupObjectDatabase.GetById(YellowChamberId).As<YellowChamberItem>();
        public static ScalingStatBoostItem CursedBulletsObject => PickupObjectDatabase.GetById(CursedBulletsId).As<ScalingStatBoostItem>();
        public static CompanionItem ChickenFluteObject => PickupObjectDatabase.GetById(ChickenFluteId).As<CompanionItem>();
        public static ChestTeleporterItem ChestTeleporterObject => PickupObjectDatabase.GetById(ChestTeleporterId).As<ChestTeleporterItem>();
        public static Gun WoodenBlasphemyObject => PickupObjectDatabase.GetById(WoodenBlasphemyId).As<Gun>();
        public static ItemBlueprintItem DougBreachItemObject => PickupObjectDatabase.GetById(DougBreachItemId).As<ItemBlueprintItem>();
        public static Gun RobotsLeftHandObject => PickupObjectDatabase.GetById(RobotsLeftHandId).As<Gun>();
        public static Gun TurboGunObject => PickupObjectDatabase.GetById(TurboGunId).As<Gun>();
        public static SprenOrbitalItem SprunObject => PickupObjectDatabase.GetById(SprunId).As<SprenOrbitalItem>();
        public static ComplexProjectileModifier BlankBulletsObject => PickupObjectDatabase.GetById(BlankBulletsId).As<ComplexProjectileModifier>();
        public static CompanionItem JunkanObject => PickupObjectDatabase.GetById(JunkanId).As<CompanionItem>();
        public static Gun VoidCoreCannonObject => PickupObjectDatabase.GetById(VoidCoreCannonId).As<Gun>();
        public static Gun AlasSniperionSynergyObject => PickupObjectDatabase.GetById(AlasSniperionSynergyId).As<Gun>();
        public static Gun LifeOrbObject => PickupObjectDatabase.GetById(LifeOrbId).As<Gun>();
        public static Gun TeapotObject => PickupObjectDatabase.GetById(TeapotId).As<Gun>();
        public static Gun MrAccretionJrObject => PickupObjectDatabase.GetById(MrAccretionJrId).As<Gun>();
        public static Gun StoneDomeObject => PickupObjectDatabase.GetById(StoneDomeId).As<Gun>();
        public static Gun BubbleBlasterObject => PickupObjectDatabase.GetById(BubbleBlasterId).As<Gun>();
        public static AmmoPickup SpreadAmmoObject => PickupObjectDatabase.GetById(SpreadAmmoId).As<AmmoPickup>();
        public static Gun BigShotgunObject => PickupObjectDatabase.GetById(BigShotgunId).As<Gun>();
        public static Gun GunnerObject => PickupObjectDatabase.GetById(GunnerId).As<Gun>();
        public static Gun LameyGunObject => PickupObjectDatabase.GetById(LameyGunId).As<Gun>();
        public static Gun SlingerObject => PickupObjectDatabase.GetById(SlingerId).As<Gun>();
        public static BankBagItem LootBagObject => PickupObjectDatabase.GetById(LootBagId).As<BankBagItem>();
        public static BankMaskItem ClownMaskObject => PickupObjectDatabase.GetById(ClownMaskId).As<BankMaskItem>();
        public static Gun NeoTechYoSynergyObject => PickupObjectDatabase.GetById(NeoTechYoSynergyId).As<Gun>();
        public static Gun RubensteinsMonsterObject => PickupObjectDatabase.GetById(RubensteinsMonsterId).As<Gun>();
        public static Gun WoodBeamObject => PickupObjectDatabase.GetById(WoodBeamId).As<Gun>();
        public static Gun IslandFormeSynergyObject => PickupObjectDatabase.GetById(IslandFormeSynergyId).As<Gun>();
        public static Gun WaveBeamSynergyObject => PickupObjectDatabase.GetById(WaveBeamSynergyId).As<Gun>();
        public static Gun IceBeamSynergyObject => PickupObjectDatabase.GetById(IceBeamSynergyId).As<Gun>();
        public static Gun PlasmaBeamSynergyObject => PickupObjectDatabase.GetById(PlasmaBeamSynergyId).As<Gun>();
        public static Gun HyberBeamSynergyObject => PickupObjectDatabase.GetById(HyberBeamSynergyId).As<Gun>();
        public static Gun CarefulIterationSynergyObject => PickupObjectDatabase.GetById(CarefulIterationSynergyId).As<Gun>();
        public static Gun QuickBoomerangSynergyObject => PickupObjectDatabase.GetById(QuickBoomerangSynergyId).As<Gun>();
        public static Gun TimeStopperSynergyObject => PickupObjectDatabase.GetById(TimeStopperSynergyId).As<Gun>();
        public static Gun MetalBladeSynergyObject => PickupObjectDatabase.GetById(MetalBladeSynergyId).As<Gun>();
        public static Gun LeafShieldSynergyObject => PickupObjectDatabase.GetById(LeafShieldSynergyId).As<Gun>();
        public static Gun AtomicFireSynergyObject => PickupObjectDatabase.GetById(AtomicFireSynergyId).As<Gun>();
        public static Gun BubbleLeadSynergyObject => PickupObjectDatabase.GetById(BubbleLeadSynergyId).As<Gun>();
        public static Gun AirShooterSynergyObject => PickupObjectDatabase.GetById(AirShooterSynergyId).As<Gun>();
        public static Gun CrashBomberSynergyObject => PickupObjectDatabase.GetById(CrashBomberSynergyId).As<Gun>();
        public static PaydayDrillItem DrillObject => PickupObjectDatabase.GetById(DrillId).As<PaydayDrillItem>();
        public static Gun ElimentalerObject => PickupObjectDatabase.GetById(ElimentalerId).As<Gun>();
        public static PlatinumBulletsItem PlatinumBulletsObject => PickupObjectDatabase.GetById(PlatinumBulletsId).As<PlatinumBulletsItem>();
        public static GunVolleyModificationItem BumbulletsObject => PickupObjectDatabase.GetById(BumbulletsId).As<GunVolleyModificationItem>();
        public static BlankPersonalityItem HoleyGrailObject => PickupObjectDatabase.GetById(HoleyGrailId).As<BlankPersonalityItem>();
        public static CompanionItem TurkeyObject => PickupObjectDatabase.GetById(TurkeyId).As<CompanionItem>();
        public static TableFlipItem TableTechShotgunObject => PickupObjectDatabase.GetById(TableTechShotgunId).As<TableFlipItem>();
        public static CrisisStoneItem CrisisStoneObject => PickupObjectDatabase.GetById(CrisisStoneId).As<CrisisStoneItem>();
        public static SnowballBulletsItem SnowballetsObject => PickupObjectDatabase.GetById(SnowballetsId).As<SnowballBulletsItem>();
        public static GungeonEggItem WeirdEggObject => PickupObjectDatabase.GetById(WeirdEggId).As<GungeonEggItem>();
        public static ComplexProjectileModifier DevolverRoundsObject => PickupObjectDatabase.GetById(DevolverRoundsId).As<ComplexProjectileModifier>();
        public static ComplexProjectileModifier VorpalBulletsObject => PickupObjectDatabase.GetById(VorpalBulletsId).As<ComplexProjectileModifier>();
        public static BasicStatPickup GoldJunkObject => PickupObjectDatabase.GetById(GoldJunkId).As<BasicStatPickup>();
        public static KiPulseItem DarumaObject => PickupObjectDatabase.GetById(DarumaId).As<KiPulseItem>();
        public static FoldingTableItem PortableTableDeviceObject => PickupObjectDatabase.GetById(PortableTableDeviceId).As<FoldingTableItem>();
        public static MulticompanionItem TurtleProblemObject => PickupObjectDatabase.GetById(TurtleProblemId).As<MulticompanionItem>();
        public static Gun ChamberGunObject => PickupObjectDatabase.GetById(ChamberGunId).As<Gun>();
        public static Gun FullCircleSynergyObject => PickupObjectDatabase.GetById(FullCircleSynergyId).As<Gun>();
        public static Gun UppercaseRObject => PickupObjectDatabase.GetById(UppercaseRId).As<Gun>();
        public static Gun PaydayWinchesterObject => PickupObjectDatabase.GetById(PaydayWinchesterId).As<Gun>();
        public static Gun RogueSpecialAltObject => PickupObjectDatabase.GetById(RogueSpecialAltId).As<Gun>();
        public static Gun BudgetRevolverAltObject => PickupObjectDatabase.GetById(BudgetRevolverAltId).As<Gun>();
        public static FragileGunItemPiece GunPieceObject => PickupObjectDatabase.GetById(GunPieceId).As<FragileGunItemPiece>();
        public static ComplexProjectileModifier HungryBulletsObject => PickupObjectDatabase.GetById(HungryBulletsId).As<ComplexProjectileModifier>();
        public static Gun KrullerGlaiveObject => PickupObjectDatabase.GetById(KrullerGlaiveId).As<Gun>();
        public static Gun ChamberGunOublietteObject => PickupObjectDatabase.GetById(ChamberGunOublietteId).As<Gun>();
        public static Gun ChamberGunForgeObject => PickupObjectDatabase.GetById(ChamberGunForgeId).As<Gun>();
        public static Gun ChamberGunHollowObject => PickupObjectDatabase.GetById(ChamberGunHollowId).As<Gun>();
        public static Gun ChamberGunProperObject => PickupObjectDatabase.GetById(ChamberGunProperId).As<Gun>();
        public static GunVolleyModificationItem OrbitalBulletsObject => PickupObjectDatabase.GetById(OrbitalBulletsId).As<GunVolleyModificationItem>();
        public static CheeseWheelItem PartiallyEatenCheeseObject => PickupObjectDatabase.GetById(PartiallyEatenCheeseId).As<CheeseWheelItem>();
        public static RatPackItem ResourcefulSackObject => PickupObjectDatabase.GetById(ResourcefulSackId).As<RatPackItem>();
        public static CompanionItem BabyGoodMimicObject => PickupObjectDatabase.GetById(BabyGoodMimicId).As<CompanionItem>();
        public static MachoBraceItem MachoBraceObject => PickupObjectDatabase.GetById(MachoBraceId).As<MachoBraceItem>();
        public static TableFlipItem TableTechHeatObject => PickupObjectDatabase.GetById(TableTechHeatId).As<TableFlipItem>();
        public static RatBootsItem RatBootsObject => PickupObjectDatabase.GetById(RatBootsId).As<RatBootsItem>();
        public static Gun EnemyElimentalerObject => PickupObjectDatabase.GetById(EnemyElimentalerId).As<Gun>();
        public static Gun HighDragunfireObject => PickupObjectDatabase.GetById(HighDragunfireId).As<Gun>();
        public static Gun BetaRaySynergyObject => PickupObjectDatabase.GetById(BetaRaySynergyId).As<Gun>();
        public static Gun TheElephantInTheRoomSynergyObject => PickupObjectDatabase.GetById(TheElephantInTheRoomSynergyId).As<Gun>();
        public static Gun PistolMachineSynergyObject => PickupObjectDatabase.GetById(PistolMachineSynergyId).As<Gun>();
        public static Gun PeaCannonSynergyObject => PickupObjectDatabase.GetById(PeaCannonSynergyId).As<Gun>();
        public static Gun DualingPistolSynergyObject => PickupObjectDatabase.GetById(DualingPistolSynergyId).As<Gun>();
        public static Gun LaserLightShowSynergyObject => PickupObjectDatabase.GetById(LaserLightShowSynergyId).As<Gun>();
        public static Gun KalibreathSynergyObject => PickupObjectDatabase.GetById(KalibreathSynergyId).As<Gun>();
        public static Gun BlunderbraceSynergyObject => PickupObjectDatabase.GetById(BlunderbraceSynergyId).As<Gun>();
        public static Gun SnowballShotgunSynergyObject => PickupObjectDatabase.GetById(SnowballShotgunSynergyId).As<Gun>();
        public static Gun ArmoredCorpsSynergyObject => PickupObjectDatabase.GetById(ArmoredCorpsSynergyId).As<Gun>();
        public static Gun DetectiveModeSynergyObject => PickupObjectDatabase.GetById(DetectiveModeSynergyId).As<Gun>();
        public static Gun PandemicPistolSynergyObject => PickupObjectDatabase.GetById(PandemicPistolSynergyId).As<Gun>();
        public static Gun AlistairsLadderSynergyObject => PickupObjectDatabase.GetById(AlistairsLadderSynergyId).As<Gun>();
        public static Gun M1MultiToolSynergyObject => PickupObjectDatabase.GetById(M1MultiToolSynergyId).As<Gun>();
        public static Gun FutureGangsterSynergyObject => PickupObjectDatabase.GetById(FutureGangsterSynergyId).As<Gun>();
        public static Gun BlackFlagSynergyObject => PickupObjectDatabase.GetById(BlackFlagSynergyId).As<Gun>();
        public static Gun FiveOclockSomewhereSynergyObject => PickupObjectDatabase.GetById(FiveOclockSomewhereSynergyId).As<Gun>();
        public static Gun FruitsAndVegetablesSynergyObject => PickupObjectDatabase.GetById(FruitsAndVegetablesSynergyId).As<Gun>();
        public static Gun KalibersGripSynergyObject => PickupObjectDatabase.GetById(KalibersGripSynergyId).As<Gun>();
        public static Gun KlobberingTimeSynergyObject => PickupObjectDatabase.GetById(KlobberingTimeSynergyId).As<Gun>();
        public static Gun SpecialReserveSynergyObject => PickupObjectDatabase.GetById(SpecialReserveSynergyId).As<Gun>();
        public static Gun NailedItSynergyObject => PickupObjectDatabase.GetById(NailedItSynergyId).As<Gun>();
        public static Gun ShowAcrossTheBowSynergyObject => PickupObjectDatabase.GetById(ShowAcrossTheBowSynergyId).As<Gun>();
        public static Gun IronSlugSynergyObject => PickupObjectDatabase.GetById(IronSlugSynergyId).As<Gun>();
        public static Gun HardLightSynergyObject => PickupObjectDatabase.GetById(HardLightSynergyId).As<Gun>();
        public static Gun ChiefMasterSynergyObject => PickupObjectDatabase.GetById(ChiefMasterSynergyId).As<Gun>();
        public static Gun BatteryPoweredSynergyObject => PickupObjectDatabase.GetById(BatteryPoweredSynergyId).As<Gun>();
        public static Gun MaximizeSpellSynergyObject => PickupObjectDatabase.GetById(MaximizeSpellSynergyId).As<Gun>();
        public static Gun HegemonySpecialForcesSynergyObject => PickupObjectDatabase.GetById(HegemonySpecialForcesSynergyId).As<Gun>();
        public static Gun CactusFlowerSynergyObject => PickupObjectDatabase.GetById(CactusFlowerSynergyId).As<Gun>();
        public static Gun NoxinCannonSynergyObject => PickupObjectDatabase.GetById(NoxinCannonSynergyId).As<Gun>();
        public static Gun AlternativeRockSynergyObject => PickupObjectDatabase.GetById(AlternativeRockSynergyId).As<Gun>();
        public static Gun ApiarySynergyObject => PickupObjectDatabase.GetById(ApiarySynergyId).As<Gun>();
        public static Gun RecyclingBinSynergyObject => PickupObjectDatabase.GetById(RecyclingBinSynergyId).As<Gun>();
        public static Gun SaviorOfTheUniverseSynergyObject => PickupObjectDatabase.GetById(SaviorOfTheUniverseSynergyId).As<Gun>();
        public static Gun FiringWithFlairSynergyObject => PickupObjectDatabase.GetById(FiringWithFlairSynergyId).As<Gun>();
        public static Gun NotQuiteAsMiniSynergyObject => PickupObjectDatabase.GetById(NotQuiteAsMiniSynergyId).As<Gun>();
        public static Gun DoubleDoubleHelixSynergyObject => PickupObjectDatabase.GetById(DoubleDoubleHelixSynergyId).As<Gun>();
        public static Gun LikeShootingFishSynergyObject => PickupObjectDatabase.GetById(LikeShootingFishSynergyId).As<Gun>();
        public static Gun IceCapSynergyObject => PickupObjectDatabase.GetById(IceCapSynergyId).As<Gun>();
        public static Gun PeripheralVisionSynergyObject => PickupObjectDatabase.GetById(PeripheralVisionSynergyId).As<Gun>();
        public static Gun RaidenSynergyObject => PickupObjectDatabase.GetById(RaidenSynergyId).As<Gun>();
        public static Gun DoubleMoon7SynergyObject => PickupObjectDatabase.GetById(DoubleMoon7SynergyId).As<Gun>();
        public static Gun LotusBloomSynergyObject => PickupObjectDatabase.GetById(LotusBloomSynergyId).As<Gun>();
        public static Gun HammerAndNailSynergyObject => PickupObjectDatabase.GetById(HammerAndNailSynergyId).As<Gun>();
        public static Gun ArcticWarfareSynergyObject => PickupObjectDatabase.GetById(ArcticWarfareSynergyId).As<Gun>();
        public static Gun CerebralBrosSynergyObject => PickupObjectDatabase.GetById(CerebralBrosSynergyId).As<Gun>();
        public static Gun SquareBraceSynergyObject => PickupObjectDatabase.GetById(SquareBraceSynergyId).As<Gun>();
        public static Gun KingBomberSynergyObject => PickupObjectDatabase.GetById(KingBomberSynergyId).As<Gun>();
        public static Gun ElectronPackSynergyObject => PickupObjectDatabase.GetById(ElectronPackSynergyId).As<Gun>();
        public static Gun HeavyJoltSynergyObject => PickupObjectDatabase.GetById(HeavyJoltSynergyId).As<Gun>();
        public static Gun PitchPerfectSynergyObject => PickupObjectDatabase.GetById(PitchPerfectSynergyId).As<Gun>();
        public static Gun CommammoBeltSynergyObject => PickupObjectDatabase.GetById(CommammoBeltSynergyId).As<Gun>();
        public static Gun RubyCarbineSynergyObject => PickupObjectDatabase.GetById(RubyCarbineSynergyId).As<Gun>();
        public static Gun TearJerkerUnknownSynergyObject => PickupObjectDatabase.GetById(TearJerkerUnknownSynergyId).As<Gun>();
        public static Gun AkeyBreakySynergyObject => PickupObjectDatabase.GetById(AkeyBreakySynergyId).As<Gun>();
        public static KeyBulletPickup RatKeyObject => PickupObjectDatabase.GetById(RatKeyId).As<KeyBulletPickup>();
        public static Gun GunderfuryLv50Object => PickupObjectDatabase.GetById(GunderfuryLv50Id).As<Gun>();
        public static Gun GunderfuryLv60Object => PickupObjectDatabase.GetById(GunderfuryLv60Id).As<Gun>();
        public static Gun GunderfuryLv40Object => PickupObjectDatabase.GetById(GunderfuryLv40Id).As<Gun>();
        public static Gun GunderfuryLv30Object => PickupObjectDatabase.GetById(GunderfuryLv30Id).As<Gun>();
        public static Gun GunderfuryObject => PickupObjectDatabase.GetById(GunderfuryId).As<Gun>();
        public static Gun GunderfuryLv20Object => PickupObjectDatabase.GetById(GunderfuryLv20Id).As<Gun>();
        public static Gun MimicGunObject => PickupObjectDatabase.GetById(MimicGunId).As<Gun>();
        public static PlayerOrbitalItem SerpentObject => PickupObjectDatabase.GetById(SerpentId).As<PlayerOrbitalItem>();
        public static Gun PhoenixUpSynergyObject => PickupObjectDatabase.GetById(PhoenixUpSynergyId).As<Gun>();
        public static Gun BetrayersLiesSynergyObject => PickupObjectDatabase.GetById(BetrayersLiesSynergyId).As<Gun>();
        public static Gun LowerCaseRUnknownSynergyObject => PickupObjectDatabase.GetById(LowerCaseRUnknownSynergyId).As<Gun>();
        public static Gun GreatQueenAntSynergyObject => PickupObjectDatabase.GetById(GreatQueenAntSynergyId).As<Gun>();
        public static Gun NotSoSawedOffSynergyObject => PickupObjectDatabase.GetById(NotSoSawedOffSynergyId).As<Gun>();
        public static Gun WrathOfTheBlamSynergyObject => PickupObjectDatabase.GetById(WrathOfTheBlamSynergyId).As<Gun>();
        public static Gun ContrailSynergyObject => PickupObjectDatabase.GetById(ContrailSynergyId).As<Gun>();
        public static Gun KungFuHippieRappinSurferSynergyObject => PickupObjectDatabase.GetById(KungFuHippieRappinSurferSynergyId).As<Gun>();
        public static Gun ParchmentalSynergyObject => PickupObjectDatabase.GetById(ParchmentalSynergyId).As<Gun>();
        public static Gun GunderlordSynergyObject => PickupObjectDatabase.GetById(GunderlordSynergyId).As<Gun>();
        public static Gun TurtineGunObject => PickupObjectDatabase.GetById(TurtineGunId).As<Gun>();
        public static Gun SunlightJavelinObject => PickupObjectDatabase.GetById(SunlightJavelinId).As<Gun>();
        public static Gun SecondAccidentSynergyObject => PickupObjectDatabase.GetById(SecondAccidentSynergyId).As<Gun>();
        public static Gun DontHootTheMessengerSynergyObject => PickupObjectDatabase.GetById(DontHootTheMessengerSynergyId).As<Gun>();
        public static Gun BigGunObject => PickupObjectDatabase.GetById(BigGunId).As<Gun>();
        public static Gun WestbroNomesRevolverObject => PickupObjectDatabase.GetById(WestbroNomesRevolverId).As<Gun>();
        public static Gun WestbroTucosRevolverObject => PickupObjectDatabase.GetById(WestbroTucosRevolverId).As<Gun>();
        public static Gun WestbroAngelsRevolverObject => PickupObjectDatabase.GetById(WestbroAngelsRevolverId).As<Gun>();
        public static Gun EvolverObject => PickupObjectDatabase.GetById(EvolverId).As<Gun>();
        public static Gun EvolverSpongeObject => PickupObjectDatabase.GetById(EvolverSpongeId).As<Gun>();
        public static Gun EvolverFlatwormObject => PickupObjectDatabase.GetById(EvolverFlatwormId).As<Gun>();
        public static Gun EvolverSnailObject => PickupObjectDatabase.GetById(EvolverSnailId).As<Gun>();
        public static Gun EvolverFrogObject => PickupObjectDatabase.GetById(EvolverFrogId).As<Gun>();
        public static Gun EvolverDragonObject => PickupObjectDatabase.GetById(EvolverDragonId).As<Gun>();
        public static Gun HighKaliberObject => PickupObjectDatabase.GetById(HighKaliberId).As<Gun>();
        public static Gun FinishedGunObject => PickupObjectDatabase.GetById(FinishedGunId).As<Gun>();
        public static Gun ChamberGunHellObject => PickupObjectDatabase.GetById(ChamberGunHellId).As<Gun>();
        public static Gun ChamberGunAbbeyObject => PickupObjectDatabase.GetById(ChamberGunAbbeyId).As<Gun>();
        public static Gun ChamberGunMinesObject => PickupObjectDatabase.GetById(ChamberGunMinesId).As<Gun>();
        public static Gun ChamberGunRatLairObject => PickupObjectDatabase.GetById(ChamberGunRatLairId).As<Gun>();
        public static Gun MarineSidearmAltObject => PickupObjectDatabase.GetById(MarineSidearmAltId).As<Gun>();
        public static Gun RustySidearmAltObject => PickupObjectDatabase.GetById(RustySidearmAltId).As<Gun>();
        public static Gun DartGunAltObject => PickupObjectDatabase.GetById(DartGunAltId).As<Gun>();
        public static Gun RobotsRightHandAltObject => PickupObjectDatabase.GetById(RobotsRightHandAltId).As<Gun>();
        public static Gun BlasphemyAltObject => PickupObjectDatabase.GetById(BlasphemyAltId).As<Gun>();
        public static MagazineRackItem MagazineRackObject => PickupObjectDatabase.GetById(MagazineRackId).As<MagazineRackItem>();
        public static SynergyCompletionItem LichsEyeBulletsObject => PickupObjectDatabase.GetById(LichsEyeBulletsId).As<SynergyCompletionItem>();
        public static Gun INeedScissors61SynergyObject => PickupObjectDatabase.GetById(INeedScissors61SynergyId).As<Gun>();
        public static WingsItem CatBulletKingThroneObject => PickupObjectDatabase.GetById(CatBulletKingThroneId).As<WingsItem>();
        public static CompanionItem BabyGoodShelletonObject => PickupObjectDatabase.GetById(BabyGoodShelletonId).As<CompanionItem>();
        public static Gun MaxPaneSynergyObject => PickupObjectDatabase.GetById(MaxPaneSynergyId).As<Gun>();
        public static SpawnObjectPlayerItem ShadowCloneObject => PickupObjectDatabase.GetById(ShadowCloneId).As<SpawnObjectPlayerItem>();
        public static RatchetScouterItem ScouterObject => PickupObjectDatabase.GetById(ScouterId).As<RatchetScouterItem>();
        public static ComplexProjectileModifier KatanaBulletsObject => PickupObjectDatabase.GetById(KatanaBulletsId).As<ComplexProjectileModifier>();
        public static Gun ChamberGunRngObject => PickupObjectDatabase.GetById(ChamberGunRngId).As<Gun>();
    }
}
